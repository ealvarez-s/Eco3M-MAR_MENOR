      SUBROUTINE BUDGET_EXPORT_BOTTOM


!_____________________________________________________________________*
!                                                                     *
! LAST REVISION: 27-12-2014                                           *
!                                                                     *
!_____________________________________________________________________*


!_____________________________________________________________________*
!                                                                     *
! Calculates the export towards the bottom at 200m depth              *
!                                                                     *
!_____________________________________________________________________*

!_____________________________________________________________________*
!                                                                     *
! Modifications:                                                      *
!                                                                     *
!                                                                     *
!_____________________________________________________________________*



!---------------------------------------------------------------------*
! Declarations:


! Global variables
      use ModuleDeclaration
      use module_principal
      use module_parallele !#MPI
      use module_global
      IMPLICIT NONE

! Local variables
      REAL VIT,EXP_SED,EXP_ADV,EXP_TURB,EXP_SED_BOT

!---------------------------------------------------------------------*

! calcul de l'export en dessous de 200 m
      if(I1DBIO/=1)then
      tps_strada=tps_strada+1
      tps_strada_2d=tps_strada_2d+1



       do i=mbio1,mbio2
       do j=nbio1,nbio2
       i2=i+par%timax(1)      ! ds le repere global
       j2=j+par%tjmax(1)
       if (j2>=j1domain.and.j2<=j2domain.and.i2>=i1domain.and.i2<=i2domain) then     !vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
! ATTENTION TEST PLUS BAS INCLU DANS CETTE ZONE
      if(mask_t(I,J,kmax+1)==1)then !debut test

! calcul du niveau juste au dessous de 200m, ou fond
      k=kmax
     do while(k>kmin_w(i,j).and.depth_t(i,j,k)>-200) ! pour diag12
        k=k-1
      enddo

! surface de la maille
      x2=dxdy_t(i,j)*mask_i_w(i)*mask_j_w(j)

! calcul de la vitesse verticale au niveau _w(i,j,k)
      VIT=0.
      if(k<kmin_w(i,j))then
         print*,'erreur dans l algo strada',i,j,k,kmin_w(i,j)
      endif
      if(k>kmin_w(i,j))then
        VIT= 0.5*(omega_w(i,j,k,1)+omega_w(i,j,k+1,1))           &
           + 0.5*(vel_u(i,j,k,1)  +vel_u(i+1,J,k,1)  )           &
                *(depth_u(i+1,J,k)-depth_u(i,j,k)  )/dx_t(i,j)   &
           + 0.5*(vel_v(i,j,k,1)   +vel_v(I,j+1,k,1) )           &
                *(depth_v(I,j+1,k)-depth_v(i,j,k)  )/dy_t(i,j)   &
           +0.5*(sigma_w(i,j,k)+sigma_w(i,j,k+1))/dti_lp         &
                *(ssh_int_w(i,j,2) -ssh_int_w(i,j,0) )
      endif


      DO vb=1,vbmax      ! debut boucle vb



      if(abs(bio_t(i,j,k,vb)>1.e-30))then    !ce 09-12-2014
      EXP_SED=-wsed(vb)*bio_t(i,j,k,vb)*x2
      else
      EXP_SED=0.
      endif


! export advectif
      if(abs(bio_t(i,j,k,vb)>1.e-30))then    !ce 27-12-2014
      EXP_ADV=-VIT*bio_t(i,j,k,vb)*x2
      else
      EXP_ADV=0.
      endif



! export turbulent
      EXP_TURB=0.
      if(k/=kmin_w(i,j).and.abs(bio_t(i,j,k+1,vb)-bio_t(i,j,k  ,vb))>1.e-30.and.abs(bio_t(i,j,k  ,vb)-bio_t(i,j,k-1,vb))>1.e-30)then        !ce 09-12-2014
      EXP_TURB=                                        &
        0.5*(                                          &
             (bio_t(i,j,k+1,vb)                        &
             -bio_t(i,j,k  ,vb))                       &
            /(depth_t(i,j,k+1)-depth_t(i,j,k))         &
             *kh_w(i,j,k+1)                            &
             +                                         &
             (bio_t(i,j,k  ,vb)                        &
             -bio_t(i,j,k-1,vb))                       &
            /(depth_t(i,j,k)-depth_t(i,j,k-1))         &
             *kh_w(i,j,k)                              &
            )*x2       
      endif
      


! export de particules (mop,zoo,phyto,bact) en mgC m-2 j-1
      if(vb==iDIAC.or.vb==iNANOC.or.vb==iSYNEC                     &
           .or.vb==iZOONANOC.or.vb==iZOOMESOC.or.vb==iZOOMICROC    &
           .or.vb==iLMOPC.or.vb==iSMOPC.or.vb==iBACTC) then
       if(x2.gt.0.) then
       EXP2D(I,J,1)= EXP2D(I,J,1) & 
            +(EXP_SED+ EXP_ADV+ EXP_TURB)*86400*12/x2
       EXP2D(I,J,2)= EXP2D(I,J,2)+(EXP_SED)*86400*12/x2
       EXP2D(I,J,3)= EXP2D(I,J,3)+(EXP_TURB)*86400*12/x2
       EXP2D(I,J,4)= EXP2D(I,J,4)+(EXP_ADV)*86400*12/x2
       endif

! export de mod en mgC m-2 j-1
      elseif(vb==iMODC) then
       if(x2.gt.0.) then
         EXP2D(I,J,5)= EXP2D(I,J,5)+( EXP_ADV+ EXP_TURB)*86400*12/x2
         EXP2D(I,J,6)= EXP2D(I,J,6)+( EXP_ADV)*86400*12/x2
         EXP2D(I,J,7)= EXP2D(I,J,7)+( EXP_TURB)*86400*12/x2
       endif
! export de nitrate en mgC m-2 j-1
!     elseif(vb==iNITRATE) then
!      if(x2.gt.0.) then
!        EXP2D(I,J,8)= EXP2D(I,J,8)+( EXP_ADV+ EXP_TURB)*86400/x2
!        EXP2D(I,J,9)= EXP2D(I,J,9)+( EXP_ADV)*86400/x2
!        EXP2D(I,J,10)= EXP2D(I,J,10)+( EXP_TURB)*86400/x2
!      endif

! export de mod en mmolN m-2 j-1
!     elseif(vb==iMODN) then
!      if(x2.gt.0.) then
!        EXP2D(I,J,11)= EXP2D(I,J,11)+( EXP_ADV+ EXP_TURB)*86400/x2
!        EXP2D(I,J,12)= EXP2D(I,J,12)+( EXP_ADV)*86400/x2
!        EXP2D(I,J,13)= EXP2D(I,J,13)+( EXP_TURB)*86400/x2
!      endif

! export de PHYTON en mmolN m-2 j-1
!     elseif(vb==iDIAN.or.vb==iNANON.or.vb==iSYNEN) then
!      if(x2.gt.0.) then
!        EXP2D(I,J,14)= EXP2D(I,J,14)+( EXP_SED+ EXP_ADV+ EXP_TURB)*86400/x2
!        EXP2D(I,J,15)= EXP2D(I,J,15)+(EXP_SED)*86400/x2
!        EXP2D(I,J,16)= EXP2D(I,J,16)+( EXP_ADV)*86400/x2
!        EXP2D(I,J,17)= EXP2D(I,J,17)+( EXP_TURB)*86400/x2
!      endif

! export de DETRITUS en mmolN m-2 j-1
!     elseif(vb==iLMOPN.or.vb==iSMOPN) then
!      if(x2.gt.0.) then
!        EXP2D(I,J,18)= EXP2D(I,J,18)+( EXP_SED+ EXP_ADV+ EXP_TURB)*86400/x2
!        EXP2D(I,J,19)= EXP2D(I,J,19)+(EXP_SED)*86400/x2
!        EXP2D(I,J,20)= EXP2D(I,J,20)+( EXP_ADV)*86400/x2
!        EXP2D(I,J,21)= EXP2D(I,J,21)+( EXP_TURB)*86400/x2   
!      endif


! export de BACTN en mmolN m-2 j-1
!     elseif(vb==iBACTC) then
!      if(x2.gt.0.) then
!        EXP2D(I,J,22)= EXP2D(I,J,22)+ (EXP_ADV+ EXP_TURB)*0.232*86400/x2
!        EXP2D(I,J,23)= EXP2D(I,J,23)+( EXP_ADV)*0.232*86400/x2
!        EXP2D(I,J,24)= EXP2D(I,J,24)+( EXP_TURB)*0.232*86400/x2
!      endif


! export de ZOON en mmolN m-2 j-1
!     elseif(vb==iZOONANOC.or.vb==iZOOMESOC.or.vb==iZOOMICROC) then
!      if(x2.gt.0.) then
!        EXP2D(I,J,25)= EXP2D(I,J,25)+( EXP_ADV+ EXP_TURB)*0.18*86400/x2
!        EXP2D(I,J,26)= EXP2D(I,J,26)+( EXP_ADV)*0.18*86400/x2
!        EXP2D(I,J,27)= EXP2D(I,J,27)+( EXP_TURB)*0.18*86400/x2
!      endif


      endif
! Export sur le fond
      if(abs(bio_t(i,j,kmin_w(i,j),vb)>1.e-30))then    !ce 09-12-2014
      EXP_SED_BOT = -wsed(vb)*bio_t(i,j,kmin_w(i,j),vb)*x2
      else
      EXP_SED_BOT = 0.
      endif



!! caroline different ici mais ne semble pas logique- voir aussi *86400*dti
      if(vb==iLMOPC.or.vb==iSMOPC.or.vb==iDIAC) then
       if(x2.gt.0.) then
      SUM_EXPORTC_BOT_2D(I,J) = SUM_EXPORTC_BOT_2D(I,J)          &     !ce terme
                              + EXP_SED_BOT*dti_fw/x2
       endif
!     SUM_EXPORTC_BOT = SUM_EXPORTC_BOT + EXP_SED_BOT*dti_fw      ! et celui-là sont identiques claude
          EXPORTC_BOT =     EXPORTC_BOT + EXP_SED_BOT*86400
      SUM_SEDC = SUM_SEDC + EXP_SED_BOT                ! claude melange versions a clarifier
          SEDC =     SEDC + EXP_SED_BOT
      endif                                                       ! idem plus bas

      if(vb==iLMOPP.or.vb==iSMOPP.or.vb==IDIAP) then
       if(x2.gt.0.) then
      SUM_EXPORTP_BOT_2D(I,J) = SUM_EXPORTP_BOT_2D(I,J)          &
                              + EXP_SED_BOT*dti_fw/x2
       endif
      SUM_EXPORTP_BOT = SUM_EXPORTP_BOT + EXP_SED_BOT*dti_fw
          EXPORTP_BOT =     EXPORTP_BOT + EXP_SED_BOT*86400
      SUM_SEDP = SUM_SEDP + EXP_SED_BOT
          SEDP =     SEDP + EXP_SED_BOT
      endif

      if(vb==iLMOPSI.or.vb==iDIASI) then
      if(x2.gt.0.) then
      SUM_EXPORTSI_BOT_2D(I,J) = SUM_EXPORTSI_BOT_2D(I,J)        &
                               + EXP_SED_BOT*dti_fw/x2
      endif 
      SUM_EXPORTSI_BOT = SUM_EXPORTSI_BOT + EXP_SED_BOT*dti_fw
          EXPORTSI_BOT =     EXPORTSI_BOT + EXP_SED_BOT*86400
      SUM_SEDSI = SUM_SEDSI + EXP_SED_BOT
          SEDSI =     SEDSI + EXP_SED_BOT
      endif

      if(vb==iLMOPN.or.vb==iSMOPN.or.vb==IDIAN) then
      if(x2.gt.0.) then
      SUM_EXPORTN_BOT_2D(I,J) = SUM_EXPORTN_BOT_2D(I,J)          &
                              + EXP_SED_BOT*dti_fw/x2
      endif
      SUM_EXPORTN_BOT = SUM_EXPORTN_BOT + EXP_SED_BOT*dti_fw
          EXPORTN_BOT =     EXPORTN_BOT + EXP_SED_BOT*86400
      SUM_SEDN = SUM_SEDN + EXP_SED_BOT
          SEDN =     SEDN + EXP_SED_BOT
      endif


      enddo !fin boucle kb

      endif !fin test
      endif             !vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
      enddo !fin boucle i
      enddo !fin boucle j
      endif


 34      format(1(F13.5,1X),33(E,1X))


!     endif ! kount éééééééééééééééééééééééééééééééééééééééééééééééééééééééééééé

      RETURN
      END
