      SUBROUTINE InitNutDOxy

!_____________________________________________________________________*
! 3d ecosystem model                                                  *
!                                                                     *
! LAST REVISION: 16 MAY 2007                                           *
!                                                                     *
! Implementation: Caroline Ulses                                      *
!                 NIOO-CEME                                           *
!_____________________________________________________________________*


!_____________________________________________________________________*
!                                                                     *
! 1. Initialises the general parameters                               *
! 2. Reads the light and pelagic parameters                           *
! 3. Initialises the variables                                        *
! 4. Writes the initial profiles for the Femme Environment            *
!_____________________________________________________________________*

!_____________________________________________________________________*
!                                                                     *
! Modifications:                                                      *
! 21/02/07: include symphonie2007.h dans la version 2004_v7           *
! 16/05/07: version a 3 phytos, 3 zoo et bacteries                    *
! 03/12/07: modifs Claude pour frontieres Est                         *
! 18/07/08: ajout d'une option nudging                                *
!  21/03/2013: modification dans les initialisations bio              *
!_____________________________________________________________________*



!---------------------------------------------------------------------*
! Declarations:


! Global variables

      use ModuleComBlock
      use UserDeclaration
      use ModuleDeclaration
      use module_principal
      use module_parallele !#MPI
      use module_global
      use module_offline
      implicit none
!      include 'netcdf.inc'

! Local variables
      ! modif polygone et initialisation Alex
      integer,parameter :: nmaxprof=43, npoly=9
      integer :: npoints_poly, n, polygon_m(mbio1:mbio2,nbio1:nbio2)

      double precision :: x,y, r1, r2, deltap
      double precision,dimension(:),allocatable :: xp,yp

      logical :: ldinmesh
      character(100) :: name_poly

      integer ChoiceInitPelagic,NumVar(20),LDir,K_pr  &
             ,InitFemme,ifemme,JFemme,nmaxlpc,nmax,nmax1,nmax2,nmax3    &
             ,isc2160,jsc2160,isw2060,jsw2060,nmax4,nmax5,nmax6         &
             ,isc2240,jsc2240,ij,InitOC

      character DATE*6,DirInitFile*90,Fic(20)*80      &
               ,NameVar(vbmax)*9,FicInitVar*80        &
               ,FicLPC_Pho*80,FicLPC_Nit*80


      double precision InitValue(20,3000),Prof(20,3000),Prof_oxyg(20,3000),Prof_oxyg_WEST(20,3000)       &
                      ,InitValue_GLT_DIC(20,3000)    &
                      ,InitValue_EST_WEST_DIC(20,3000)    &
                      ,InitValue_EST_EST_DIC(20,3000)    &
                      ,InitValue_EST_DIC(20,3000)    &
                      ,InitValue_EST_WEST_ALK(20,3000)    &
                      ,InitValue_EST_EST_ALK(20,3000)    &
                      ,InitValue_EST_ALK(20,3000)    &
                      ,InitValue_WEST_DIC(20,3000)    &
                      ,InitValue_EST(20,3000)   &
                      ,InitValue_WEST(20,3000)   &
                      ! New stuff 
                      ! valeur de 1 à 9 pour les sous-régions: ALB, ALG, GOL,
                      ! TYR, CMED, ION, ADR, AEG, LEV
                      ,InitVal_NIT(npoly,nmaxprof)   &
                      ,InitVal_PHO(npoly,nmaxprof)   &
                      ,InitVal_SIL(npoly,nmaxprof)   &
                      ,Init_PRF(nmaxprof)        &
                      ! New stuff
                      ,InitValue_cyp(20,3000)   &
                      ,InitValue_ion(20,3000)   &
                      ,InitValue_lib(20,3000)   &
                      ,InitValue_tun(20,3000)   &
                      ,InitValue_sic(20,3000)   &
                      ,InitValue_nad(20,3000)   &
                      ,InitValue_sad(20,3000)   &
                      ,InitValue_mlt(20,3000)   &
                      ,InitValue_ege(20,3000)   &
                      ,InitValue_oxyg_cyp(20,3000)   &
                      ,InitValue_oxyg_ion(20,3000)   &
                      ,InitValue_oxyg_lib(20,3000)   &
                      ,InitValue_oxyg_tun(20,3000)   &
                      ,InitValue_oxyg_sic(20,3000)   &
                      ,InitValue_oxyg_nad(20,3000)   &
                      ,InitValue_oxyg_sad(20,3000)   &
                      ,InitValue_oxyg_mlt(20,3000)   &
                      ,InitValue_oxyg_ege(20,3000)   &
                      ,CoefDiaC,CoefZooc,CoefSyneC           &
                      ,MasseMolC,MasseMolN                   &
                      ,RedfieldNC,RedfieldPC                 &
                      ,PropMOP                               &
                      ,InitLPOSi,InitAmmonium                &
                      ,InitValueN(99),ProfN(99),CoefNanoC    &
                      ,TChl(0:imax+1,0:jmax+1,kmax)          &
                      ,CNSMOP,ChlNDia                        &
                      ,XP1,XP2,YP1,YP2                       &
                      ,InitValueLPC(20,3000),ProfLPC(20,3000),lon,lat &
                      ,salz,salmu,salsigma,p1,p2,p3,p4,p5&
                      ,InitPH(1,22),ProfPH(1,22)            &
                      ,InitTAlk(5,22),ProfTALk(5,22)            &
                      ,InitDIC(5,22),ProfDIC(5,22)

      real InitPH3D(iglb+2,jglb+2,kmax),InitPH2D((iglb+2)*(jglb+2),kmax), &
           InitPH3D2(iglb+2,jglb+2,kmax),InitMODC(iglb+2,jglb+2,kmax)            
 
       integer l,m,nmax10y(14)
       real Prof10y(14,2511),var10y(14,2511,10)
       character*58 filename


       print*,'passe dans InitNutDOXY 14/9'


       InitOC=0

!      open(unit=10,file='../../../MERCATOFF/InitMODCrestart')
!!      print*,'dim',kmax,jglb+2,iglb+2
!      do k=1,kmax
!      do j=1,jglb+2
!      do i=1,iglb+2
!      read(10,*)InitMODC(i,j,k)
!      enddo
!      enddo
!      enddo 


!---------------------------------------------------------------------*


! density-dependent initialisation ofnutrients
!     if(ChoiceInitPelagic==4) then   

      nmax1=68
      nmax2=68
      nmax3=68
      nmax4=21
      nmax5=22
!     nmax6=183
      nmax6=2311

      open(unit=2,file='/tmpdir/culses/bassin2/MERCATOFF/DyfamedmeanpH.txt')
      do k=1,nmax5
      read(2,*)ProfPH(1,k),InitPH(1,k)
      enddo
      close(2)
       

! to get initial temperature and salinity fields  
           if(ioffline==2) call offline_inout(2)   
!$ water density:                                                      !14/11/04
!      if(eqs_state1.eq.0)call density(0) !lineaire
!      if(eqs_state1.eq.1)call density(3) !Non line sans pr
       call equation_of_state('potential density',1)

! nutrients


!!!!!! !!!!!!!!!!!!!!!!!! LOADING PROFILES FROM OBSERVATION !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


!load oxygene EST et OUEST

!      open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_oxyg_est.txt')
!      read(3,*)nmax3
     open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_oxyg_EST2.txt')
      do k=1,nmax4
      read(3,*)InitValue_EST(1,k),Prof_oxyg(1,k)
      enddo
      close(3)

!     open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/OXYGEN_WEST.txt')
      open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/InitOxyDyf201008.txt')
      do k=1,nmax6
      read(3,*)InitValue_WEST(1,k),Prof_oxyg_WEST(1,k)
      enddo
      close(3)

      open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_DIC_EST.txt')
      do k=1,nmax4
      read(3,*)InitValue_EST_DIC(1,k),Prof_oxyg(1,k)
      enddo
      close(3)
! dic
      open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_DIC_WEST.txt')
      do k=1,nmax4
      read(3,*)InitDIC(1,k),ProfDIC(1,k)
      enddo
      close(3)

     open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_DIC_EST_WEST.txt')
      do k=1,nmax4
      read(3,*)InitDIC(3,k),ProfDIC(3,k)
      enddo
      close(3)

     open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_DIC_EST_EST.txt')
      do k=1,nmax4
      read(3,*)InitDIC(4,k),ProfDIC(4,k)
      enddo
      close(3)


     open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_DIC_GLT.txt')
      do k=1,nmax4
      read(3,*)InitDIC(5,k),ProfDIC(5,k)
      enddo
      close(3)

      open(unit=3,file='/tmpdir/culses/Dewex/Data/DyfamedmeanDIC.txt')
      do k=1,nmax5
      read(3,*)ProfDIC(2,k),InitDIC(2,k)
      enddo
      close(3)


! alk
     open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_ALK_WEST.txt')
      do k=1,nmax4
      read(3,*)InitTAlk(1,k),ProfTAlk(1,k)
      enddo
      close(3)

     open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_ALK_EST_WEST.txt')
      do k=1,nmax4
      read(3,*)InitTAlk(3,k),ProfTAlk(3,k)
      enddo
      close(3)

     open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_ALK_EST_EST.txt')
      do k=1,nmax4
      read(3,*)InitTAlk(4,k),ProfTAlk(4,k)
      enddo
      close(3)

     open(unit=3,file='/tmpdir/culses/bassin2/NEMOFF1/PROFILNUTS/interp_ALK_GLT.txt')
      do k=1,nmax4
      read(3,*)InitTAlk(5,k),ProfTAlk(5,k)
      enddo
      close(3)

      open(unit=3,file='/tmpdir/culses/Dewex/Data/DyfamedmeanTAlk.txt')
      do k=1,nmax5
      read(3,*)ProfTAlk(2,k),InitTAlk(2,k)
      enddo
      close(3)

! load Oxygene Bassin Feyçal 

! cyp

      open(unit=3,file='/tmpdir/culses/bassin/NEMOFF1/PROFILNUTS/interp_oxyg_cyp.txt')
      do k=1,nmax4
      read(3,*)InitValue_oxyg_cyp(1,k),Prof_oxyg(1,k)
      enddo
      close(3)

! ion

      open(unit=3,file='/tmpdir/culses/bassin/NEMOFF1/PROFILNUTS/interp_oxyg_ion.txt')
      do k=1,nmax4
      read(3,*)InitValue_oxyg_ion(1,k),Prof_oxyg(1,k)
      enddo
      close(3)

! lib

      open(unit=3,file='/tmpdir/culses/bassin/NEMOFF1/PROFILNUTS/interp_oxyg_lib.txt')
      do k=1,nmax4
      read(3,*)InitValue_oxyg_lib(1,k),Prof_oxyg(1,k)
      enddo
      close(3)

! tun

      open(unit=3,file='/tmpdir/culses/bassin/NEMOFF1/PROFILNUTS/interp_oxyg_tun.txt')
      do k=1,nmax4
      read(3,*)InitValue_oxyg_tun(1,k),Prof_oxyg(1,k)
      enddo
      close(3)

! sic

      open(unit=3,file='/tmpdir/culses/bassin/NEMOFF1/PROFILNUTS/interp_oxyg_sic.txt')
      do k=1,nmax4
      read(3,*)InitValue_oxyg_sic(1,k),Prof_oxyg(1,k)
      enddo
      close(3)

! nad

      open(unit=3,file='/tmpdir/culses/bassin/NEMOFF1/PROFILNUTS/interp_oxyg_nad.txt')
      do k=1,nmax4
      read(3,*)InitValue_oxyg_nad(1,k),Prof_oxyg(1,k)
      enddo
      close(3)

! sad

      open(unit=3,file='/tmpdir/culses/bassin/NEMOFF1/PROFILNUTS/interp_oxyg_sad.txt')
      do k=1,nmax4
      read(3,*)InitValue_oxyg_sad(1,k),Prof_oxyg(1,k)
      enddo
      close(3)

! mlt

      open(unit=3,file='/tmpdir/culses/bassin/NEMOFF1/PROFILNUTS/interp_oxyg_mlt.txt')
      do k=1,nmax4
      read(3,*)InitValue_oxyg_mlt(1,k),Prof_oxyg(1,k)
      enddo
      close(3)


! ege

      open(unit=3,file='/tmpdir/culses/bassin/NEMOFF1/PROFILNUTS/interp_oxyg_ege.txt')
      do k=1,nmax4
      read(3,*)InitValue_oxyg_ege(1,k),Prof_oxyg(1,k)
      enddo
      close(3)

! Lecture des profils de PROFILNUTS : Alex
! ALB
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ALB_nit.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_NIT(1,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ALB_phos.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_PHO(1,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ALB_sil.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_SIL(1,k)
      enddo
      close(3)
! ALG
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ALG_nit.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_NIT(2,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ALG_phos.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_PHO(2,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ALG_sil.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_SIL(2,k)
      enddo
      close(3)
! GOL
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/GOL_nit.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_NIT(3,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/GOL_phos.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_PHO(3,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/GOL_sil.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_SIL(3,k)
      enddo
      close(3)
! TYR
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/TYR_nit.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_NIT(4,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/TYR_phos.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_PHO(4,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/TYR_sil.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_SIL(4,k)
      enddo
      close(3)
! CMED
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/CMED_nit.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_NIT(5,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/CMED_phos.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_PHO(5,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/CMED_sil.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_SIL(5,k)
      enddo
      close(3)
! ION
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ION_nit.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_NIT(6,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ION_phos.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_PHO(6,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ION_sil.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_SIL(6,k)
      enddo
      close(3)
! ADR
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ADR_nit.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_NIT(7,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ADR_phos.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_PHO(7,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/ADR_sil.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_SIL(7,k)
      enddo
      close(3)
! AEG
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/AEG_nit.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_NIT(8,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/AEG_phos.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_PHO(8,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/AEG_sil.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_SIL(8,k)
      enddo
      close(3)
! LEV
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/LEV_nit.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_NIT(9,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/LEV_phos.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_PHO(9,k)
      enddo
      close(3)
      open(unit=3,file='/tmpdir/alex/BASSIN_3D/PROFILNUTS/LEV_sil.txt')
      do k=1,nmaxprof
      read(3,*)Init_PRF(k),InitVal_SIL(9,k)
      enddo
      close(3)

      print*,'Profils lus'


! Initialisation et lecture des polygones
! Attention à l'ordre des polygones dans le fichier
! ici l'ordre est :
! ALB, ALG, GOL, TYR, CMED, ION, ADR, AEG et LEV

      polygon_m(:,:)=0
      open(unit=11,file='/tmpdir/alex/BASSIN_3D/POLYGONE/liste_poly')
      do n=1,npoly

        read(11,'(a)')name_poly
        open(unit=12,file=trim(name_poly))
        read(12,*)npoints_poly
        if(allocated(xp))then
         deallocate(xp)
         deallocate(yp)
        endif
        allocate(xp(npoints_poly))
        allocate(yp(npoints_poly))

        do i=1,npoints_poly
        read(12,*)xp(i),yp(i)
        enddo

      ! On repère les points correspondants aux polygones                                                                   
        do i1=mbio1,mbio2
        do j1=nbio1,nbio2
          if (mask_t(i1,j1,kmax)==1.and.polygon_m(i1,j1)==0) then
            x=lon_t(i1,j1)*rad2deg
            y=lat_t(i1,j1)*rad2deg
            ldinmesh=.false.
            j=npoints_poly
            do i=1,npoints_poly
              if ((((YP(I)<=Y).and.(Y<YP(J))).or.((YP(J)<=Y).and.(Y<YP(I)))) &
               .and.(X<(XP(J)-XP(I))*(Y-YP(I))/(YP(J)-YP(I))+XP(I))) then
                if(ldinmesh)then
                  ldinmesh=.false.
                else
                  ldinmesh=.true.
                endif
              endif
              j=i
            enddo

            if(ldinmesh)then
              polygon_m(i1,j1)=n
            endif
            ! polygon_m(i1,j1) contient alors le numero du polygone et donc du
            ! profil a interpoler

          endif
        enddo
        enddo
        close(12)
      enddo
      close(11)


!!!!!!!!!!!!!!!!!!!! END PROFILE LOADING !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


! bioregion 11 tyrrhenien

! coeff pour la relation oxygène/salinité polynôme 4
      salmu = 38.49 ! moyenne des salinité des mesures ctd
      salsigma = 0.085254 ! ecart type des salinité
      p1 = -8.9604d-5
      p2 = -0.016762
      p3 = -0.9261
      p4 = -15.234
      p5 = 203.9


      do i=mbio1,mbio2
      do j=nbio1,nbio2
      do k=kmin_w(i,j),kmax


       if (mask_t(i,j,k)==1) then

       ! lecture et interpolation des profils pour nitrate, silice phosphate PUIS
       ! Initialisation de l'oxygene, zoo, ALK, etc

       ! interpolation des profils de Nitrate, Phosphate et Silice

         if (depth_t(i,j,k)<=Init_PRF(1)) then
           bio_t(i,j,k,iNitrate)   = InitVal_NIT(polygon_m(i,j),1)
           bio_t(i,j,k,iPhosphate) = InitVal_PHO(polygon_m(i,j),1)
           bio_t(i,j,k,iSilice)    = InitVal_SIL(polygon_m(i,j),1)
         elseif(depth_t(i,j,k)>=Init_PRF(nmaxprof))then
           bio_t(i,j,k,iNitrate)   = InitVal_NIT(polygon_m(i,j),nmaxprof)
           bio_t(i,j,k,iPhosphate) = InitVal_PHO(polygon_m(i,j),nmaxprof)
           bio_t(i,j,k,iSilice)    = InitVal_SIL(polygon_m(i,j),nmaxprof)
         else
  
           K_pr=1
           do while(depth_t(i,j,k)>Init_PRF(K_pr))
             K_pr=K_pr+1
           enddo

           r1=-Init_PRF(K_pr-1)+depth_t(i,j,k)
           r2=-depth_t(i,j,k)+Init_PRF(K_pr)
           deltap=Init_PRF(K_pr)-Init_PRF(K_pr-1) 

           bio_t(i,j,k,iNitrate)  =(r1*InitVal_NIT(polygon_m(i,j),K_pr  )        &
                                   +r2*InitVal_NIT(polygon_m(i,j),K_pr-1))/deltap
           bio_t(i,j,k,iPhosphate)=(r1*InitVal_PHO(polygon_m(i,j),K_pr  )        &
                                   +r2*InitVal_PHO(polygon_m(i,j),K_pr-1))/deltap
           bio_t(i,j,k,iSilice)   =(r1*InitVal_SIL(polygon_m(i,j),K_pr  )        &
                                   +r2*InitVal_SIL(polygon_m(i,j),K_pr-1))/deltap
         endif



         if (                              &
         lon_t(i,j)>=9.5*deg2rad.and.                            & 
         lon_t(i,j)<12.5*deg2rad.and.                            &
         lat_t(i,j)>41.5*deg2rad.and.               &
         lat_t(i,j)<44.3*deg2rad)then  !.and.lat_t(i,j)<44.*deg2rad)then


! oxygene
!        bio_t(i,j,k,34)=200.
         salz=(sal_t(i,j,k,1) - salmu )/salsigma
         bio_t(i,j,k,iOXYGEN) = p1*salz**4   &
                              + p2*salz**3   &
                              + p3*salz**2   &
                              + p4*salz      &
                              + p5


          if (bio_t(i,j,k,iOXYGEN)>165.and.depth_t(i,j,k)<-200) bio_t(i,j,k,iOXYGEN)=165 

          if (depth_t(i,j,k)<-800.and.depth_t(i,j,k)>-1000) bio_t(i,j,k,iOXYGEN)=185

         if (depth_t(i,j,k)<=-1000.and.depth_t(i,j,k)>=-1500) bio_t(i,j,k,iOXYGEN)=190

!        if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=195
         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond


         if(bio_t(i,j,k,iOXYGEN)>=250) bio_t(i,j,k,iOXYGEN)=250

         if(bio_t(i,j,k,iOXYGEN)<=165) bio_t(i,j,k,iOXYGEN)=165


!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg_WEST(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg_WEST(1,nmax6))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,nmax6)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg_WEST(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              ( Prof_oxyg_WEST(1,K_pr)+depth_t(i,j,k))*InitValue_WEST(1,K_pr-1) &
             +(-Prof_oxyg_WEST(1,K_pr-1)-depth_t(i,j,k))*InitValue_WEST(1,K_pr) &
             )/(Prof_oxyg_WEST(1,K_pr  )-Prof_oxyg_WEST(1,K_pr-1))
           endif

!         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond 
!end oxygen




        elseif (                               &
        lon_t(i,j)>=9.5*deg2rad.and.                                 &
        lon_t(i,j)<16.*deg2rad.and.                                 &
        lat_t(i,j)<=41.5*deg2rad.and.lat_t(i,j)>38.*deg2rad)then




! oxygene
!        bio_t(i,j,k,34)=200.
         salz=(sal_t(i,j,k,1) - salmu )/salsigma
         bio_t(i,j,k,iOXYGEN) = p1*salz**4   &
                              + p2*salz**3   &
                              + p3*salz**2   &
                              + p4*salz      &
                              + p5


         if (bio_t(i,j,k,iOXYGEN)>165.and.depth_t(i,j,k)<-200) bio_t(i,j,k,iOXYGEN)=165 
         if (depth_t(i,j,k)<-800.and.depth_t(i,j,k)>-1000) bio_t(i,j,k,iOXYGEN)=185
         if (depth_t(i,j,k)<=-1000.and.depth_t(i,j,k)>=-1500) bio_t(i,j,k,iOXYGEN)=190
!        if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=195
         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond


         if(bio_t(i,j,k,iOXYGEN)>=250) bio_t(i,j,k,iOXYGEN)=250

         if(bio_t(i,j,k,iOXYGEN)<=165) bio_t(i,j,k,iOXYGEN)=165


!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg_WEST(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg_WEST(1,nmax6))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,nmax6)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg_WEST(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              (Prof_oxyg_WEST(1,K_pr)+depth_t(i,j,k))*InitValue_WEST(1,K_pr-1) &
             +(-Prof_oxyg_WEST(1,K_pr-1)-depth_t(i,j,k))*InitValue_WEST(1,K_pr) &
             )/(Prof_oxyg_WEST(1,K_pr  )-Prof_oxyg_WEST(1,K_pr-1))
           endif

!         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond 
!end oxygen




! bioregion 12  subbassin algero-provençal

         elseif (                               &
         lon_t(i,j)>-2.*deg2rad.and.                                 &
         lon_t(i,j)<9.5*deg2rad.and.                                 &
         lat_t(i,j)<39.5*deg2rad)then    ! 38.


! oxygene
!        bio_t(i,j,k,34)=200.
         salz=(sal_t(i,j,k,1) - salmu )/salsigma
         bio_t(i,j,k,iOXYGEN) = p1*salz**4   &
                              + p2*salz**3   &
                              + p3*salz**2   &
                              + p4*salz      &
                              + p5

 
         if (bio_t(i,j,k,iOXYGEN)>165.and.depth_t(i,j,k)<-200) bio_t(i,j,k,iOXYGEN)=165 
         if (depth_t(i,j,k)<-800.and.depth_t(i,j,k)>-1000) bio_t(i,j,k,iOXYGEN)=185
         if (depth_t(i,j,k)<=-1000.and.depth_t(i,j,k)>=-1500) bio_t(i,j,k,iOXYGEN)=190
!        if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=195
         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond


         if(bio_t(i,j,k,iOXYGEN)>=250) bio_t(i,j,k,iOXYGEN)=250

         if(bio_t(i,j,k,iOXYGEN)<=165) bio_t(i,j,k,iOXYGEN)=165


!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg_WEST(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg_WEST(1,nmax6))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,nmax6)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg_WEST(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              (Prof_oxyg_WEST(1,K_pr)+depth_t(i,j,k))*InitValue_WEST(1,K_pr-1) &
             +(-Prof_oxyg_WEST(1,K_pr-1)-depth_t(i,j,k))*InitValue_WEST(1,K_pr) &
             )/(Prof_oxyg_WEST(1,K_pr  )-Prof_oxyg_WEST(1,K_pr-1))
           endif

!         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond 
!end oxygen






! sicile
        elseif(                                  &
        lon_t(i,j)>=9.5*deg2rad.and.lon_t(i,j)<11.*deg2rad.and.         &
        lat_t(i,j)>36.5*deg2rad.and.lat_t(i,j)<=38.*deg2rad)then

         
!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg(1,nmax4))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,nmax4)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              ( Prof_oxyg(1,K_pr  )+depth_t(i,j,k))*InitValue_EST(1,K_pr-1) &
             +(-Prof_oxyg(1,K_pr-1)-depth_t(i,j,k))*InitValue_EST(1,K_pr  ) &
             )/(Prof_oxyg(1,K_pr  )-Prof_oxyg(1,K_pr-1))
           endif
!end oxygen



! malte
        elseif (                                 &
        lon_t(i,j)>10.*deg2rad.and.lon_t(i,j)<=15.*deg2rad.and.        &
        lat_t(i,j)>34.*deg2rad.and.lat_t(i,j)<=38.*deg2rad)then
 

!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg(1,nmax4))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,nmax4)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              ( Prof_oxyg(1,K_pr  )+depth_t(i,j,k))*InitValue_EST(1,K_pr-1) &
             +(-Prof_oxyg(1,K_pr-1)-depth_t(i,j,k))*InitValue_EST(1,K_pr  ) &
             )/(Prof_oxyg(1,K_pr  )-Prof_oxyg(1,K_pr-1))
           endif
!end oxygen




! libye ouest
! libye est
        elseif(                                  &
        lon_t(i,j)>15.*deg2rad.and.lon_t(i,j)<=30.*deg2rad.and.        &
        lat_t(i,j)<=37.*deg2rad)then

!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg(1,nmax4))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,nmax4)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              ( Prof_oxyg(1,K_pr  )+depth_t(i,j,k))*InitValue_EST(1,K_pr-1) &
             +(-Prof_oxyg(1,K_pr-1)-depth_t(i,j,k))*InitValue_EST(1,K_pr  ) &
             )/(Prof_oxyg(1,K_pr  )-Prof_oxyg(1,K_pr-1))
           endif
!end oxygen



! tun
        elseif(                                  &
        lon_t(i,j)>9.5*deg2rad.and.lon_t(i,j)<=15.*deg2rad.and.        &
!        lat_t(i,j)>36.*deg2rad.and.lat_t(i,j)<38.*deg2rad)then
        lat_t(i,j)<=34.*deg2rad)then



!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg(1,nmax4))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,nmax4)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              ( Prof_oxyg(1,K_pr  )+depth_t(i,j,k))*InitValue_EST(1,K_pr-1) &
             +(-Prof_oxyg(1,K_pr-1)-depth_t(i,j,k))*InitValue_EST(1,K_pr  ) &
             )/(Prof_oxyg(1,K_pr  )-Prof_oxyg(1,K_pr-1))
           endif
!end oxygen



! ionnienne
        elseif(                                  &
        lon_t(i,j)>15.*deg2rad.and.lon_t(i,j)<22.*deg2rad.and.        &
        lat_t(i,j)>37.*deg2rad.and.lat_t(i,j)<39.*deg2rad)then
!        lat_t(i,j)<39.*deg2rad)then


!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg(1,nmax4))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,nmax4)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              ( Prof_oxyg(1,K_pr  )+depth_t(i,j,k))*InitValue_EST(1,K_pr-1) &
             +(-Prof_oxyg(1,K_pr-1)-depth_t(i,j,k))*InitValue_EST(1,K_pr  ) &
             )/(Prof_oxyg(1,K_pr  )-Prof_oxyg(1,K_pr-1))
           endif
!end oxygen



! cypre
        elseif(lon_t(i,j)>=30.*deg2rad)then!.and.   &
!        lat_t(i,j)<36.*deg2rad)then
!         lat_t(i,j)<34.*deg2rad)then



!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg(1,nmax4))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,nmax4)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              ( Prof_oxyg(1,K_pr  )+depth_t(i,j,k))*InitValue_EST(1,K_pr-1) &
             +(-Prof_oxyg(1,K_pr-1)-depth_t(i,j,k))*InitValue_EST(1,K_pr  ) &
             )/(Prof_oxyg(1,K_pr  )-Prof_oxyg(1,K_pr-1))
           endif
!end oxygen



! NAD
        elseif(                                  &
        lon_t(i,j)>11.*deg2rad.and.lon_t(i,j)<20.*deg2rad.and.        &
        lat_t(i,j)>41.*deg2rad )then



!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg(1,nmax4))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,nmax4)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              ( Prof_oxyg(1,K_pr  )+depth_t(i,j,k))*InitValue_EST(1,K_pr-1) &
             +(-Prof_oxyg(1,K_pr-1)-depth_t(i,j,k))*InitValue_EST(1,K_pr  ) &
             )/(Prof_oxyg(1,K_pr  )-Prof_oxyg(1,K_pr-1))
           endif
!end oxygen



! SAD
        elseif(                                  &
        lon_t(i,j)>16.*deg2rad.and.lon_t(i,j)<20.5*deg2rad.and.        &
        lat_t(i,j)>39.*deg2rad.and.lat_t(i,j)<41.*deg2rad)then


!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg(1,nmax4))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,nmax4)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              ( Prof_oxyg(1,K_pr  )+depth_t(i,j,k))*InitValue_EST(1,K_pr-1) &
             +(-Prof_oxyg(1,K_pr-1)-depth_t(i,j,k))*InitValue_EST(1,K_pr  ) &
             )/(Prof_oxyg(1,K_pr  )-Prof_oxyg(1,K_pr-1))
           endif
!end oxygen



! ege
        elseif(                                   &
        lon_t(i,j)>=21.*deg2rad.and.lon_t(i,j)<30.*deg2rad.and.      &
        lat_t(i,j)>=37.*deg2rad)then



!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg(1,nmax4))then
               bio_t(i,j,k,iOxygen) = InitValue_EST(1,nmax4)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              ( Prof_oxyg(1,K_pr  )+depth_t(i,j,k))*InitValue_EST(1,K_pr-1) &
             +(-Prof_oxyg(1,K_pr-1)-depth_t(i,j,k))*InitValue_EST(1,K_pr  ) &
             )/(Prof_oxyg(1,K_pr  )-Prof_oxyg(1,K_pr-1))
           endif
!end oxygen



!!  changement dans laboran et gibraltar: tester a gibralat la relation dans alboran

! alboran
        elseif(                                  &
        lon_t(i,j)<=-2.*deg2rad.and.lon_t(i,j)>-5.*deg2rad)then



! oxygene
!        bio_t(i,j,k,34)=200.
         salz=(sal_t(i,j,k,1) - salmu )/salsigma
         bio_t(i,j,k,iOXYGEN) = p1*salz**4   &
                              + p2*salz**3   &
                              + p3*salz**2   &
                              + p4*salz      &
                              + p5



         if (bio_t(i,j,k,iOXYGEN)>165.and.depth_t(i,j,k)<-200) bio_t(i,j,k,iOXYGEN)=165 
         if (depth_t(i,j,k)<-800.and.depth_t(i,j,k)>-1000) bio_t(i,j,k,iOXYGEN)=185
         if (depth_t(i,j,k)<=-1000.and.depth_t(i,j,k)>=-1500) bio_t(i,j,k,iOXYGEN)=190
!        if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=195
         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond


         if(bio_t(i,j,k,iOXYGEN)>=250) bio_t(i,j,k,iOXYGEN)=250

         if(bio_t(i,j,k,iOXYGEN)<=165) bio_t(i,j,k,iOXYGEN)=165


!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg_WEST(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg_WEST(1,nmax6))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,nmax6)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg_WEST(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              (Prof_oxyg_WEST(1,K_pr)+depth_t(i,j,k))*InitValue_WEST(1,K_pr-1) &
             +(-Prof_oxyg_WEST(1,K_pr-1)-depth_t(i,j,k))*InitValue_WEST(1,K_pr) &
             )/(Prof_oxyg_WEST(1,K_pr  )-Prof_oxyg_WEST(1,K_pr-1))
           endif

!         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond 
!end oxygen




!! gibraltar
        elseif(                                  &
        lon_t(i,j)<=-5.*deg2rad)then
!



!
!!inflow
        if(rhp_t(i,j,k)+rho-1000.<27.9) bio_t(i,j,k,iNITRATE)=0.4
        if(rhp_t(i,j,k)+rho-1000.<27.9) bio_t(i,j,k,iPHOSPHATE)=0.12
        if(rhp_t(i,j,k)+rho-1000.<27.9) bio_t(i,j,k,iSILICE)=0.79
!!outflow
        if(rhp_t(i,j,k)+rho-1000.>28.6) bio_t(i,j,k,iNITRATE)=8.
        if(rhp_t(i,j,k)+rho-1000.>28.6) bio_t(i,j,k,iPHOSPHATE)=0.4
        if(rhp_t(i,j,k)+rho-1000.>28.6) bio_t(i,j,k,iSILICE)=6.47
!!!!!!!!!!!!!!!!!!fin gibralar

! oxygene
!        bio_t(i,j,k,34)=200.
         salz=(sal_t(i,j,k,1) - salmu )/salsigma
         bio_t(i,j,k,iOXYGEN) = p1*salz**4   &
                              + p2*salz**3   &
                              + p3*salz**2   &
                              + p4*salz      &
                              + p5

         if (bio_t(i,j,k,iOXYGEN)>165.and.depth_t(i,j,k)<-200) bio_t(i,j,k,iOXYGEN)=165 
    
         if (depth_t(i,j,k)<-800.and.depth_t(i,j,k)>-1000) bio_t(i,j,k,iOXYGEN)=185
        
         if (depth_t(i,j,k)<=-1000.and.depth_t(i,j,k)>=-1500) bio_t(i,j,k,iOXYGEN)=190
        
!        if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=195
         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond         


         if(bio_t(i,j,k,iOXYGEN)>=250) bio_t(i,j,k,iOXYGEN)=250
         
         if(bio_t(i,j,k,iOXYGEN)<=165) bio_t(i,j,k,iOXYGEN)=165

!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg_WEST(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg_WEST(1,nmax6))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,nmax6)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg_WEST(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              (Prof_oxyg_WEST(1,K_pr)+depth_t(i,j,k))*InitValue_WEST(1,K_pr-1) &
             +(-Prof_oxyg_WEST(1,K_pr-1)-depth_t(i,j,k))*InitValue_WEST(1,K_pr) &
             )/(Prof_oxyg_WEST(1,K_pr  )-Prof_oxyg_WEST(1,K_pr-1))
           endif

!         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond 
!end oxygen




!region nord occidental (provençale + ligure)

       else
         


! oxygene
!        bio_t(i,j,k,34)=200.
         salz=(sal_t(i,j,k,1) - salmu )/salsigma
         bio_t(i,j,k,iOXYGEN) = p1*salz**4   &
                              + p2*salz**3   &
                              + p3*salz**2   &
                              + p4*salz      &
                              + p5

         if (bio_t(i,j,k,iOXYGEN)>165.and.depth_t(i,j,k)<-200) bio_t(i,j,k,iOXYGEN)=165 
       
         if (depth_t(i,j,k)<-800.and.depth_t(i,j,k)>-1000) bio_t(i,j,k,iOXYGEN)=185
        
         if (depth_t(i,j,k)<=-1000.and.depth_t(i,j,k)>=-1500) bio_t(i,j,k,iOXYGEN)=190
        
!        if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=195
         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond         


         if(bio_t(i,j,k,iOXYGEN)>=250) bio_t(i,j,k,iOXYGEN)=250
         
         if(bio_t(i,j,k,iOXYGEN)<=165) bio_t(i,j,k,iOXYGEN)=165

!oxygen
             if    (-depth_t(i,j,k)<=Prof_oxyg_WEST(1,1   ))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,1)

             ELSEif(-depth_t(i,j,k)>=Prof_oxyg_WEST(1,nmax6))then
               bio_t(i,j,k,iOxygen) = InitValue_WEST(1,nmax6)

             ELSE

              K_pr=1
              do while(-depth_t(i,j,k)>Prof_oxyg_WEST(1,K_pr))
               K_pr=K_pr+1
              enddo

              bio_t(i,j,k,iOxygen)=(                              &
              (Prof_oxyg_WEST(1,K_pr)+depth_t(i,j,k))*InitValue_WEST(1,K_pr-1) &
             +(-Prof_oxyg_WEST(1,K_pr-1)-depth_t(i,j,k))*InitValue_WEST(1,K_pr) &
             )/(Prof_oxyg_WEST(1,K_pr  )-Prof_oxyg_WEST(1,K_pr-1))
           endif

!         if (depth_t(i,j,k)<=-1500) bio_t(i,j,k,iOXYGEN)=205 ! pour une initialisation en 2010 apres les evts de formation d'eau dense 2005 2006 2009 2010 on prefere partir avec une + forte valeur au fond 
!end oxygen

         


           endif




          bio_t(i,j,k,iOxygen)       =bio_t(i,j,k,iOxygen)  &
                            *(rhp_t(i,j,k)+rho) /1000.




      endif ! mask 
      enddo
      enddo
      enddo


!      endif     ! ChoiceInitPelagic==4




       if(par%rank==0) write(6,*)'Passe par InitNutDOxy',sumareaemed,sumareawmed,deg2rad,rad2deg
#ifdef parallele
      call mpi_barrier(par%comm2d,k_out)      ! synchro processes      !09-05-10
#endif

      END SUBROUTINE InitNutDOxy
