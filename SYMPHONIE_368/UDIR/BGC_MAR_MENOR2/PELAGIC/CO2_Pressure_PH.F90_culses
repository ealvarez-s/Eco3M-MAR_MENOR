!      subroutine CO2_Pressure_PH

! Written by Karline Soetaert - Jim Greenwood
!                 NIOO-CEME
! Implemented in S model by Caroline Ulses
!----------------------------------------------------------------!
! Based on alkalinity and DIC, calculates pH and pCO2            !
! using the equations in                                         ! 
! Millero, F.J. (1995), Geochim. Cosmochim. Acta 59(4): 661-677  !
! Archer, D. (1995).  Ecological applications 5(3): 724-739.     !
!                                                                ! 
! Alkalinity is defined as OH- + HCO3- + 2 CO3-- + BOH + si      !
!                        + HPO4-- + 2 PO4---                     !
!                        - H                                     !

! Based on this and the sumCO2 (DIC) the speciation is           !
! estimated based on the reactions:                              !
! CO2 + H2O <-> HCO3-+H+    dissociation ct K1_CO2               !
! HCO3-     <-> CO3-- +H+   dissociation ct K2_CO2               !

! Equilibrium expressed in terms of SumCO2 and H+:               !
! CO2   = H2    /(H2+K1_CO2H+K2_CO2K1_CO2)       *SumCO2         !
! HCO3- = K1_CO2H  /(H2+K1_CO2H+K2_CO2K1_CO2)    *SumCO2         !
! CO3-- = K2_CO2K1_CO2/(H2+K1_CO2H+K2_CO2K1_CO2) *SumCO2         !
! SumCO2 in mmol/m3                                              !

! Boric acid:
! H3BO3 + H2O <-> H+ + B(OH)4-           ct K_BOH3               !
! B(OH)4- = K_BOH3/(K_BOH3+H+) * SumBorate                       !

! silicic acid:                          ct K_Si                 !
! SiO2 + H2O <-> H+ + Si(OH)3O-                                  !
! Si(OH)3O-   = K_Si/(K_Si+H+) * SumSi

! Ammonia:                                                       !
! NH4+   <-> H+ + NH3                    ct K_NH4                !
! NH3     =  K_NH4 / (H+ + K_NH4) * SUMNHx                       !   
! phosphoric acid:                                               !
! H3PO4- <-> H+ + H2PO4-                 ct K1_H3PO4             !
! H2PO4- <-> H+ + HPO4--                 ct K2_H3PO4             !
! HPO4-- <-> H+ + PO4---                 ct K3_H3PO4             !
! H2PO4- = K1_H3PO4*H2                / Denom                    !
! HPO4-- = K2_H3PO4*K1_H3PO4*H        / Denom                    !
! PO4--- = K2_H3PO4*K1_H3PO4*K3_H3PO4 / Denom                    !
!         DENOM =(H3+H2*K1_H3PO4+H*K1_H3PO4K2_H3PO4+             !
!                               K1_H3PO4*K2_H3PO4*K3_H3PO4)*SUMP ! 
!----------------------------------------------------------------!
   MODULE ModuleEquilibrium

!----------------------------------------------------------------!
! The summed concentrations of species that affect pH            !
!----------------------------------------------------------------!
    DOUBLE PRECISION  :: SumCO2, SumP, SumSi, &
                         SumNHx, SumNit, SumBorate


    DOUBLE PRECISION  :: HPlus,SolvePHs,     &
                         TotalAlkalinity

   END MODULE ModuleEquilibrium

!************************************************************!

!   MODULE ModuleDissociation

!   DOUBLE PRECISION :: K_H2Os      ,& !  mol/l           Dissociation ct of water
!                       K1_CO2s     ,& !  mol/l           Dissociation ct of carbonic acid
!                       K2_CO2s     ,& !  mol/l           Dissociation ct of carbonic acid
!                       K_BOH3s     ,& !  mol/l           Dissociation ct of boric acid
!                       K1_H3PO4s   ,& !  mol/l           Dissociation ct of phosphorus
!                       K2_H3PO4s   ,& !  mol/l           
!                       K3_H3PO4s   ,& !  mol/l           
!                       K_HNO3s     ,& !  mol/l           
!                       K_NH4s      ,& !  mol/l           Dissociation ct of ammonium
!                       K_H2Ss      ,& ! mol/l           
!                       K_Aragonites,& !  mol/l           
!                       K_Calcites  ,& !  mol/l           
!                       K_Sis       ,& !  mol/l           Dissociation ct of silicic acid
!                       IonicStrength ! mol/kgLiq       

!   END MODULE ModuleDissociation

      subroutine CO2_Pressure_PH


!     use ModuleDeclaration
      USE ModuleComBlock
      implicit none
      double precision :: HenryCst


      integer           :: I,II,NumIteration
      double precision  :: Resolution
      double precision :: Temp,   & ! Temperature, dgC
                                   S       ! Salinity, PSU

      double precision  :: T,P,R,LnK,LnKp,IMcal,DeltaV,DeltaK

      double precision :: K_H2O      ,& !  mol/l           Dissociation ct of water
                       K1_CO2     ,& !  mol/l           Dissociation ct of carbonic acid
                       K2_CO2     ,& !  mol/l           Dissociation ct of carbonic acid
                       K_BOH3     ,& !  mol/l           Dissociation ct of boric acid
                       K1_H3PO4   ,& !  mol/l           Dissociation ct of phosphorus
                       K2_H3PO4   ,& !  mol/l           
                       K3_H3PO4   ,& !  mol/l           
                       K_HNO3     ,& !  mol/l           
                       K_NH4      ,& !  mol/l           Dissociation ct of ammonium
                       K_H2S      ,& ! mol/l           
                       K_Aragonite,& !  mol/l           
                       K_Calcite  ,& !  mol/l           
                       K_Si       ,& !  mol/l           Dissociation ct of silicic acid
                       IonicStrength ! mol/kgLiq

    double precision   :: SumCO2, SumP, SumSi, &
                         SumNHx, SumNit, SumBorate


    double precision   :: HPlus,SolvePHs,     &
                         TotalAlkalinity

    integer            :: Iterations

    integer            :: MaxIterations 
    double precision   :: Residual, dResidual, dx

    double precision   :: Hini
    double precision   :: Tolerance 

    double precision   :: HOld, HNew
    double precision   :: dHplus 

    double precision   :: CoAlkalinity, NonCOAlkalinity, aa, bb, cc
    double precision   :: CalculateNonCOAlkalinity
    double precision   :: Denominator
    double precision   :: BorateAlk, Palk, SiAlk, WaterAlk,               &
                       NitrateAlk, AmmoniumAlk
    DOUBLE PRECISION, EXTERNAL    :: SolvePH

      meanIterations  = 0
      meanResolution  = 0.D0
      MaxIterations = 100
      Tolerance = 1.d-10 
      dHplus = 1d-12
      dx = 0.

      do I=1, NumPelagicBoxes

      ! estimating pH using Newton-Raphson method   
      ! Hplus is known from previous estimate, in mol/l 
      ! Remark that the other species are in Âµmol/l)

! The dissociation constants
!        CALL Thermo_2(Temperature(I),Salinity(I),Depth(I))

!-----------------------------------------------------------------
! Calculates the thermodynamic constants, 
! (dissociation cts, solubility products) in
! seawater at temperature (T, in deg C), salinity (S, in PSU), 
! and pressure (P, in atm) conditions.  
! The  calculated constants are on the SWS pH scale.
!
! K_H2O    = dissociation constant of H2O
! K1_CO2   = 1st dissociation constant of CO2(aq)
! K2_CO2   = 2nd dissociation constant of CO2(aq)
! K_BOH3   = dissociation constant of B(OH)3
! K1_H3PO4 = 1st dissociation constant of H2PO4
! K2_H3PO4 = 2nd dissociation constant of H3PO4
! K3_H3PO4 = 3nd dissociation constant of H3PO4
! K_HNO3   = dissociation constant of HNO3
! K_NH4    = dissociation constant of NH4
! K_H2S    = 1st dissociation constant of H2S
! 
! Also calculates ionic strength, of the solution (mol/kg-solution)
!
! SLIGHTLY DIFFERENT FROM Thermo 
!-----------------------------------------------------------------

      if(maskbio(I)==1) then

      ! Temperature in dg Kelvin
      T = Temperature(I) + 273.15
      temp = Temperature(I) 
      S = Salinity(I)

      ! P is applied pressure (in Bars) = (Total Pressure-1)
      P = 0.1*Depth(I)*1.01326

      R = 83.145

!==============================================!
! apparent thermodynamic EQUILIBRIUM CONSTANTS !
!==============================================!

!  Ionic strength (Lyman and Fleming, 1940)
!  (in units of mol kg-water).

      IMcal            = 0.00147 + 0.019885*S + 0.000038*S*S
      IonicStrength = IMcal*(1.0-S/1000.0)

!----------------
! Dissociation of carbonic acid constants - Millero
! K1_CO2

      lnK = 2.83655 - 2307.1266/T -1.5529413 * LOG(T)  &
           + (-0.20760841 - 4.0484/T) * SQRT(S)       &
          + 0.08468345 * S - 0.00654208 * (S**1.5)
      
      !Pressure Correction from Morse and Mackenzie 1990
      !DeltaV = 21.07 + (0.1850*temp-(0.002248*(temp**2)))
      !DeltaK = -0.00530 + (0.1310*temp- 1.160e-06*(temp**2))
      
      ! Pressure Correction from Millero 1995     
      ! Incl.typo corrections from Lewis & Wallace (CO2SYS)   
      
      DeltaV = -25.5 + (0.1271*temp)
      DeltaK = -3.08 + (0.877*temp)
      DeltaK = DeltaK/1000
      
      !lnKp = (-(DeltaV/(R*T))*P + (0.5*(DeltaK/(R*T)))*(P**2)) + lnK 
	  lnkp=lnk

      K1_CO2 = EXP(lnKp)     
 
 ! K2_CO2
      lnK = -9.226508 - 3351.6106/T - 0.2005743* LOG(T)  &
            + (-0.106901773 - 23.9722/T) * SQRT(S)       &
            + 0.1130822 * S - 0.00846934 * (S**1.5)
      
      !Pressure Correction from Morse and Mackenzie 1990
      !DeltaV = -8.74 + 0.3*temp-0.004064*(temp**2)
      !DeltaK = -0.01104 +0.224*temp-3.056e-6*(temp**2) 
      
      ! Pressure Correction from Millero 1995 
      ! Incl.typo corrections from Lewis & Wallace (CO2SYS)     
      
      DeltaV = -15.82 - (0.0219*temp)
      DeltaK = 1.13 - (0.1475d-3*temp)
      DeltaK = DeltaK/1000
      
    !  lnKp = (-(DeltaV/(R*T))*P + (0.5*DeltaK/(R*T))*(P**2)) + lnK 
	   lnkp=lnk

      K2_CO2 = EXP(lnKp) 


!----------------
! Dissociation of water in seawater
      lnK = 148.9802 - 13847.26/T - 23.6521*LOG(T)      &
            +(-5.977+118.67/T+1.0495 * LOG(T)) * SQRT(S) &
            - 0.01615*S
      

      !Pressure Correction from Millero 1995
      !Typos from Lewis and Wallace (CO2SYS)
      
      DeltaV = -25.6 + (0.2324*temp) + (-0.0036246*(temp**2))
      DeltaK = -5.13 + (0.0794*temp)
      DeltaK = DeltaK/1000    
     ! lnKp = (-(DeltaV/(R*T))*P + (0.5*DeltaK/(R*T))*(P**2)) + lnK 
	   lnkp=lnk

      K_H2O = EXP(lnKp) 

!----------------
! Dissociation of ammonia in seawater
      lnK = -6285.33/T+0.0001635*T-0.25444      &
            +(0.46532-123.7184/T)* SQRT(S)      &
            +(-0.01992+3.17556/T)*S
      

      !Pressure Correction from Millero 1995
      !Typos corrections from Lewis and Wallace (CO2SYS)
      
      DeltaV = -26.43 + (0.0889*temp) + (-0.000905*(temp**2))
      DeltaK = -5.03 + (0.0814*temp)
      DeltaK = DeltaK/1000    
      
      !lnKp = (-(DeltaV/(R*T))*P + (0.5*DeltaK/(R*T))*(P**2)) + lnK 
	   lnkp=lnk

      K_NH4 = EXP(lnKp) 

! and of nitrate, a constant
      K_HNO3   = 23.44

!----------------
! Dissociation of boric acid

      lnK = (-8966.9 - 2890.51*SQRT(S) - 77.942*S        &
             +1.726*S**1.5 - 0.0993*S*S)/T               &
             +(148.0248 + 137.194*SQRT(S) + 1.62247*S)   &
             +(-24.4344 - 25.085 *SQRT(S) - 0.2474*S)*LOG(T) &
             + 0.053105*SQRT(S)*T 
                                               
      !Pressure Correction
      DeltaV = -29.48 + (-0.1622*temp) + (0.002608*(temp**2))
      DeltaK = -2.84 
      DeltaK = DeltaK/1000    
      !lnKp = (-(DeltaV/(R*T))*P + (0.5*DeltaK/(R*T))*(P**2)) + lnK 

      lnkp=lnk

      K_BOH3 = EXP(lnKp) 

!----------------
! Dissociation of silicic acid
     	   
	  K_Si = 4.E-10

      !Pressure Correction - Assumed to be the same as Boric Acid (See Millero 1995)

      
      DeltaV = -29.48 + (-0.1622*temp) + (0.002608*(temp**2))
      DeltaK = -2.84 
      DeltaK = DeltaK/1000 
      !Delta V and Delta K estimated from values for boric acid         
      
     ! lnKp = (-(DeltaV/(R*T))*P + (0.5*DeltaK/(R*T))*(P**2)) + LOG(K_Si) 
		lnkp=lnk
      K_Si = EXP(lnKp) 

!----------------
! Dissociation of phosphoric acid
! K1_H3PO4 is included for completeness
       
      lnK = 115.54-4576.752/T-18.453*LOG(T)+(0.69171-106.736/T)*(S**0.5)     &
              +(-0.01844-0.65643/T)*S

     !Pressure correction for K1_H3PO4      
 
      DeltaV = -14.51 + (0.1211*temp) + (-0.000321*(temp**2))
      DeltaK = -2.67 + (0.0427*temp)
      DeltaK = DeltaK/1000    
      
      
	  !lnKp = (-(DeltaV/(R*T))*P + (0.5*DeltaK/(R*T))*(P**2)) + lnK 

        lnkp=lnk

      K1_H3PO4 = EXP(lnKp)                          

! K2_H3PO4
      
      lnK = 172.1033-8814.715/T-27.927*LOG(T)+(1.3566-160.340/T)*(S**0.5)    &
	        +(-0.05778+0.37335/T)*S
	   
      !Pressure Correction 
      
      DeltaV = -23.12 + (0.1758*temp) + (-0.002647*(temp**2))
      DeltaK = -5.15 + (0.09*temp)
      DeltaK = DeltaK/1000    
      
      !lnKp = (-(DeltaV/(R*T))*P + (0.5*DeltaK/(R*T))*(P**2)) + lnK 
		lnkp=lnk
      K2_H3PO4 = EXP(lnKp) 

! K3_H3PO4

      lnK = -18.126-3070.75/T+(2.81197+17.27039/T)*(S**0.5)     &
	        +(-0.09984-44.99486/T)*S

     !Pressure Correction
      
          
      DeltaV = -26.57 + (0.2020*temp) + (-0.003042*(temp**2))
      DeltaK = -4.08 + (0.0714*temp)
      DeltaK = DeltaK/1000    
      
     ! lnKp = (-(DeltaV/(R*T))*P + (0.5*DeltaK/(R*T))*(P**2)) + lnK 
        lnkp=lnk
      K3_H3PO4 = EXP(lnKp) 

!Dissociation of hydrogen sulfide

      lnK = 225.838-13275.3/T-34.6435*LOG(T)+0.3449*(S**0.5)-0.0274*S 

      !Pressure correction

      DeltaV = -14.8 + (0.0020*temp) + (-0.0004*(temp**2))
      DeltaK = 2.89 + (0.054*temp)
      DeltaK = DeltaK/1000    
      
      lnKp = (-(DeltaV/(R*T))*P + (0.5*DeltaK/(R*T))*(P**2)) + lnK 

      K_H2S = EXP(lnKp)   


! End of calculation of dissociation constants

! Total concentration of species contributing to alkalinity 
      SumBorate       = 4.106e2 * Salinity(I) / 35.    ! Âµmol/l ou mmol/m3
      SumNHx          = Ammonium          (I)
      SumNit          = Nitrate           (I)
      SumCO2          = DIC               (I)
      SumP            = Phosphate         (I)
      SumSi           = Silice            (I)
      TotalAlkalinity = Alkalinity        (I)
      Hplus           = 10**          (-pH(I))


!        pH(I) = EstimatepH(NumIteration,Resolution)
! Estimatation of PH
        Hini       = HPlus
        Resolution = 1.D0
        numIteration = MaxIterations

!Newton-Raphson method
        DO II =1,MaxIterations

!       print*,'nrm',I,II
!       print*,'borate1',K_BOH3,Hplus,SumBorate

     HOld      = Hplus
     HNew      =SolvePH(K_H2O,HPlus,K_NH4,SumNHx,SumNit,K_BOH3, &
                                     SumBorate,K1_H3PO4,K2_H3PO4,K3_H3PO4,SumP, &
                                     K_Si,SumSi,TotalAlkalinity,SumCO2,K1_CO2,K2_CO2)

!     write(53,*)II,HPLus,Hnew
     Residual  = HPlus - HNew


     HPlus     = HPlus+dHPlus
     HNew      =SolvePH(K_H2O,HPlus,K_NH4,SumNHx,SumNit,K_BOH3, &
                                     SumBorate,K1_H3PO4,K2_H3PO4,K3_H3PO4,SumP, &
                                     K_Si,SumSi,TotalAlkalinity,SumCO2,K1_CO2,K2_CO2)
     dResidual = (HPlus - HNew -Residual) / dHPlus
     HPlus     = HOld

          IF (dResidual /= 0.D0) THEN
            dx = Residual/dResidual
!          write(54,*)II,Residual,dResidual
          ELSE
!            Write(*,*) "error ! Model cannot calculate ph! - "
          goto 12
            Exit
          ENDIF

          HPlus = HPlus - dx
!          write(55,*)'dx',II,dx
!          write(56,*)'Tolerance',II,Tolerance           
          IF (ABS(dX) < Tolerance) THEN
            numIteration  = II
            Resolution  = ABS(Residual)
            EXIT
          ENDIF

        ENDDO

! In case the model did not converge: use old values 
        IF (II >= MaxIterations) THEN
!          Write(*,*) "error ! pH calculation did not converge"
 12     continue
          HPlus = HIni
        ENDIF

      IF (Hplus > 0.d0) THEN
       pH(I)   = - LOG10(Hplus)
      ELSE
       pH(I) = - LOG10(Hini)
      ENDIF

! Utile????
      KNHs(I)   = K_NH4
      K1H3PO4(I)= K1_H3PO4
      K2H3PO4(I)= K2_H3PO4
      K3H3PO4(I)= K3_H3PO4

        meanIterations  = MeanIterations + NumIteration
        meanResolution  = MeanResolution + Resolution

!Calculate Carbonate speciation

! Solubility constant
      ! Temperature in dg Kelvin
      T = Temperature(I) + 273.15
      S = Salinity (I)

      HenryCst = exp( -60.2409 + 9345.17/T                 &
            +23.3585* DLOG(T/100) +                     &
            S*( 0.023517-2.3656d-4*T+4.7036d-7*T*T  ))

! Calculate CO2 species
      Denominator  = Hplus*(K1_CO2+Hplus) + K1_CO2*K2_CO2
      CO2(I)          = Hplus *HPlus /denominator * SumCO2
      HCO3(I)         = Hplus *K1_CO2/denominator * SumCO2
      CO3(I)          = K2_CO2*K1_CO2/denominator * SumCO2

     ! partial CO2 pressure is calculated based on the solubility equation
     ! Convert from atm to Âµatm and from mmol/m3 to mol/kg
     ! K0, moles l/atm or Âµmoles/l/Âµatm
         !KO is in mol/kg/atm or Âµmol/kg/Âµatm

          pCO2(I) = CO2(I)*1000/density(I)/HenryCst

!         print*,'co2_pressure',I,CO2(I),SumCO2,pCO2(I),pH(I)

   endif ! mask

    ENDDO
    meanIterations =      meanIterations /NumPelagicBoxes
    meanResolution =      meanResolution /NumPelagicBoxes


   RETURN
   END SUBROUTINE CO2_Pressure_PH

!*************************************************************!
! CALCULCATE THE PH BY SOLVING A QUADRATIC EQUATION
!*************************************************************!

   DOUBLE PRECISION FUNCTION SolvePH(K_H2Os,HPluss,K_NH4s,SumNHxs,SumNits,K_BOH3s, &
                                     SumBorates,K1_H3PO4s,K2_H3PO4s,K3_H3PO4s,SumPs, &
                                     K_Sis,SumSis,TotalAlkalinitys,SumCO2s,K1_CO2s,K2_CO2s)     

   USE MODULECOMBLOCK
   USE ModuleEquilibrium
!  USE ModuleDissociation
   IMPLICIT NONE
   DOUBLE PRECISION  :: CoAlkalinity, NonCOAlkalinity, aa, bb, cc
   DOUBLE PRECISION, EXTERNAL :: CalculateNonCOAlkalinity
   DOUBLE PRECISION :: WaterAlk,AmmoniumAlk,NitrateAlk,BorateAlk,PAlk,SiAlk
   DOUBLE PRECISION :: Denominator,Hpluss,TotalAlkalinitys
   DOUBLE PRECISION :: K_H2Os      ,& !  mol/l           Dissociation ct of water
                       K1_CO2s     ,& !  mol/l           Dissociation ct of carbonic acid
                       K2_CO2s     ,& !  mol/l           Dissociation ct of carbonic acid
                       K_BOH3s     ,& !  mol/l           Dissociation ct of boric acid
                       K1_H3PO4s   ,& !  mol/l           Dissociation ct of phosphorus
                       K2_H3PO4s   ,& !  mol/l
                       K3_H3PO4s   ,& !  mol/l
                       K_HNO3s     ,& !  mol/l
                       K_NH4s      ,& !  mol/l           Dissociation ct of ammonium
                       K_H2Ss      ,& ! mol/l
                       K_Aragonites,& !  mol/l
                       K_Calcites  ,& !  mol/l
                       K_Sis       ,& !  mol/l           Dissociation ct of silicic acid
                       SumNHxs     ,&
                       SumBorates  ,&
                       SumPs       ,&
                       SumSis      ,&
                       SumNits     ,&
                       SumCO2s


! 1. Estimate the contribution of the less important species directly

!        print*,'water',K_H2Os,HPluss
      ! Water (assume that water concentration is 1mol; convert to Âµmol)
        WaterAlk    = K_H2Os/HPluss*1.e6

      ! Ammonium
        AmmoniumAlk = SumNHxs - (K_NH4s /(K_NH4s+Hpluss)* SumNHxs)
        ! test CO2sys -- ajoutÃ© par Kim !!!  AmmoniumAlk = AmmoniumAlk+3
      ! Nitrate 
        NitrateAlk  =                                 SumNits
      ! It is currently assumed that HNO3 is fully dissociated 

      ! Borate
!        print*,'borate',K_BOH3s,Hpluss,SumBorates
        BorateAlk   = K_BOH3s / (K_BOH3s+Hpluss)       * SumBorates

      ! Phosphate
        Denominator = (Hpluss**3)+(HPluss*HPluss*K1_H3PO4s)+                    &
                              (HPluss*K1_H3PO4s*K2_H3PO4s)+(K1_H3PO4s*K2_H3PO4s*K3_H3PO4s)
      !                H2PO4-      + 2*HPO4--    + 3*PO4---
      PAlk        = (Hpluss*HPluss*K1_H3PO4s + 2*K1_H3PO4s*K2_H3PO4s*HPluss + 3*K1_H3PO4s*K2_H3PO4s*K3_H3PO4s)  &
                   /Denominator                  * SumPs
                
      ! Silicate
        SiAlk       = K_Sis / (K_Sis+Hpluss)           * SumSis


      ! Alkalinity component not due to CO species 
      !(Hplus is mol/l, others Âµmol/l)
         NonCOAlkalinity = SiAlk + PAlk                  &
                                  + BorateAlk                     &
                                  + WaterAlk  + NitrateAlk        &
                                  - HPluss*1e6 - AmmoniumAlk


      ! 2. Estimate H+ by solving the equation for the DIC species

      ! 3. carbonate alkalinity
        COAlkalinity = TotalAlkalinitys - NonCOAlkalinity

        !COalkalinity equals HCO3-  +2* CO3--

        ! HCO3- = K1_CO2H  /(H2+K1_CO2H+K2_CO2K1_CO2) *SumCO2
        ! CO3-- = K2_CO2K1_CO2/(H2+K1_CO2H+K2_CO2K1_CO2) *SumCO2
        ! This gives rise to a quadratic equation in H

        aa = COAlkalinity
        bb = (COAlkalinity-1.d0*SumCO2s)*K1_CO2s
        cc = (COAlkalinity - 2.d0*SumCO2s)*K1_CO2s*K2_CO2s

! new guess of H+
       SolvePH = (-bb + SQRT(BB*BB-4.D0*aa*cc) )/(2.D0*aa)

! ps: SolvePH and HPlus should converge


          RETURN
   END FUNCTION SOLVEPH
