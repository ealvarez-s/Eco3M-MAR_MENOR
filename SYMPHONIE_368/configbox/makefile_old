#__________________________________________________________
# Compilation du modele Symphonie
#__________________________________________________________
#
# Compilation avec ifort: make ifort=on
# Compilation avec f95:   make f95=on
#
# Les fichiers *.o *.f90 vont dans ../CDIR et l'executable main dans RDIR
# Commande pour lancer la simulation sous RDIR: main
#
#__________________________________________________________
# Liste des etiquettes de compilation: parametrer KEY1
#__________________________________________________________
# Les etiquettes de compilation sont des lignes du type 
# #ifdef name, #endif, introduites dans le code, servant à
# délimiter des portions de routines qui seront prises en compte 
# ou au contraire ignorees par la comilation
#
# KEY1 = -Dstokes -Dsimple_precision
# KEY1 = -Dstokes 
# KEY1 = -Dzeroadvection
# KEY1 = -Dcomodo
# KEY1 = -Dhyperion
# KEY1 = -Dsynopsis
# KEY1 = -Dkey_oasis -Dkey_oasis_symp_surfex
# KEY1 = -Dkey_sedim -Dkey_sedim_mixsed -Dkey_substance 
#__________________________________________________________

.SUFFIXES:
.SUFFIXES:  .o .F90


CPP = cpp -P -traditional -Wcomment

#USERDIR=../UDIR
USERDIR=$(PWD)
UPDATEDIR=../../UPDATE
MYSPACEDIR=../../MYSPACE
SOURCESDIR=../../SOURCES
VPATHTMP=$(USERDIR):$(UPDATEDIR):$(MYSPACEDIR):$(SOURCESDIR)

#__________________________________________________________
# Options de compilations: parametrer F77FLAGS
#__________________________________________________________
#F77FLAGS= -check bounds -traceback
#F77FLAGS= -check all -traceback
#F77FLAGS= -O2 -traceback -pg
# -fpe0 sert à refuser les divisions par zero et s'utilise AVEC -O0
# -g permet d'utiliser un debuggueur
#F77FLAGS= -g -traceback -O0 -ftrapuv -fpe0 -check bounds
 F77FLAGS= -O2 -traceback
#F77FLAGS= -traceback
#F77FLAGS= -traceback
#F77FLAGS= -O3 -traceback
#F77FLAGS=
#F77FLAGS= -check bounds -fpe0 -traceback
#F77FLAGS= -g 
#F77FLAGS= -gline -C=all
#__________________________________________________________

# Activer la biblio netcdf
# Definie pou chaque compillateur
# Desactiver la biblio netcdf
#LIB=

ifneq ($(gfortran),on)
ifneq ($(ifort),on)
ifneq ($(ifortpar),on)
ifneq ($(g95),on)
ifneq ($(pgf90),on)
#__________________
#  NAG-F95 Compiler
#
#
LIB= /home/softs/F95/poc-netcdf/lib/libpoc-netcdf.a  /home/softs/F95/netcdf/lib/libnetcdf.a -lstdc++
NETINC=/home/softs/F95/netcdf/include/

OBJDIR=../../CDIR_F95/REGION
VPATH=$(VPATHTMP):$(OBJDIR):.
INC = -I $(NETINC) -I $(USERDIR)  -I $(UPDATEDIR) -I $(MYSPACEDIR) -I $(SOURCESDIR)
#OPTIONM= $(INC) -g90 $(F77FLAGS) -save -maxcontin=200 -w 
#------------------------------------------------------------------
#Option compiler en f95 sur une machine et l'executer sur une autre:
#OPTIONM= $(INC) $(F77FLAGS) -save -maxcontin=200 -w -unsharedf95
#------------------------------------------------------------------
#Option compiler en f95:
#OPTIONM= $(INC) $(F77FLAGS) -g -gline -save -maxcontin=200 -w -PIC
#OPTIONM= $(INC) -g -gline -save -w -PIC 
OPTIONM= $(INC) $(F77FLAGS) -save -w -PIC  -maxcontin=200 -g -gline
#OPTIONM= $(INC) $(F77FLAGS) -save -maxcontin=200 -w
#------------------------------------------------------------------
#F90=f95
F90=f95
SED =  
else
#__________________
#  PGF Compiler
#
LIB= /home/softs/PGF/poc-netcdf/lib/libpoc-netcdf.a  /home/softs/PGF/netcdf/lib/libnetcdf.a -lstdc++
NETINC=/home/softs/PGF/netcdf/include/

OBJDIR=../../CDIR_PGF/REGION
VPATH=$(VPATHTMP):$(OBJDIR):.
INC = -I $(NETINC) -I $(USERDIR)  -I $(UPDATEDIR) -I $(MYSPACEDIR) -I $(SOURCESDIR)
#------------------------------------------------------------------
#Option compiler en f95 sur une machine et l'executer sur une autre:
OPTIONM= $(INC) $(F77FLAGS) -O3 -Msave -w -Mconcur -tp=k8-64e -mcmodel=medium
#------------------------------------------------------------------
F90=pgf90
SED =  

endif
else
#__________________
#  g95 Compiler
#
OBJDIR=../../CDIR_F95/REGION
VPATH=$(VPATHTMP):$(OBJDIR):.
INC = -I $(USERDIR)  -I $(UPDATEDIR) -I $(MYSPACEDIR) -I $(SOURCESDIR)
#OPTIONM= $(INC) -g90 $(F77FLAGS) -save -maxcontin=200 -w 
#------------------------------------------------------------------
#Option compiler en g95 sur une machine et l'executer sur une autre:
#OPTIONM= $(INC) $(F77FLAGS) -save -maxcontin=200 -w -unsharedf95
#------------------------------------------------------------------
#Option compiler en g95:
OPTIONM= $(INC) $(F77FLAGS) -g -i4 -fPIC
#------------------------------------------------------------------
F90=g95
SED =  
endif
else

#________________
#  ifort Compiler parallel version
#
#KEY2 = -Dparallele -Dcheckmpi
 KEY2 = -Dparallele

# Partie OASIS
OASISDIR=/home/marp/oasis3-mct/oasis3-mct_comp
OASISLIB=$(OASISDIR)/lib/libpsmile.MPI1.a $(OASISDIR)/lib/libmct.a $(OASISDIR)/lib/libmpeu.a $(OASISDIR)/lib/libscrip.a
LIBBUILD=$(OASISDIR)/build/lib
INCPSMILE=-I$(LIBBUILD)/psmile.MPI1 -I$(LIBBUILD)/scrip
#AEROPC108 netcdf-3:
#LIB=/home/softs/IFORT/poc-netcdf/lib/libpoc-netcdf.a /home/softs/IFORT/netcdf/lib/libnetcdf.a -lstdc++ /home/softs/intel/intel-2011.0.084/lib/libpnetcdf.a
#NETINC=/home/softs/IFORT/netcdf/include/

#AEROPC108 netcdf-4:
NETINC=-I/home/softs/intel/include
LIB=/home/softs/intel/lib/libpnetcdf.a /home/softs/intel/lib64/libnetcdff.a -lnetcdf -lnetcdff $(OASISLIB) 
#/home/softs/IFORT/poc-netcdf/lib/libpoc-netcdf.a /home/softs/intel/intel-2011.0.084/lib/libpnetcdf.a -L/home/softs/intel/intel-2011.0.084/hdf5-netcdf/lib -lnetcdff -L/home/softs/intel/intel-2011.0.084/hdf5-netcdf/lib/ -lnetcdf -lhdf5_hl -lhdf5  -lz -lm -lcurl
#PORTABLE PM:
#LIB=/home/softs/intel-13.1.0/lib/libpnetcdf.a -lnetcdff -lnetcdf  -lstdc++
OBJDIR=../../CDIR_IFORT/REGION
VPATH=$(VPATHTMP):$(OBJDIR):.
INC = -I$(USERDIR) -I$(NETINC) $(INCPSMILE) -I$(UPDATEDIR) -I$(MYSPACEDIR) -I$(SOURCESDIR) -I/usr/include -I/home/softs/intel/intel-2011.0.084/include/
OPTIONM= $(INC) $(F77FLAGS) -module $(OBJDIR) -g -assume byterecl -fPIC -shared-intel -fp-model precise 
F90=mpif90

# CALMIP HYPERION !---- debut ----->
#LIB=/users/p1325/marsale/softs/poc-netcdf/lib/libpoc-netcdf.a /users/p1325/marsale/softs/lib/libpnetcdf.a -L/users/p1325/marsale/softs/lib -lnetcdf -L/users/p1325/marsale/softs//lib -lhdf5_hl -lhdf5  -lz -lm  -L/users/p1325/marsale/softs/lib -lcurl
#VPATH=$(VPATHTMP):$(OBJDIR):.
#INC = -I$(USERDIR) -I$(NETINC)  -I$(UPDATEDIR) -I$(MYSPACEDIR) -I$(SOURCESDIR) -I/users/p1325/marsale/softs/include/
#OBJDIR=../../CDIR_IFORT/REGION
#VPATH=$(VPATHTMP):$(OBJDIR):.
# Grandes Grilles
#OPTIONM= $(INC) $(F77FLAGS) -module $(OBJDIR) -g -assume byterecl -fPIC -shared-intel -fp-model precise -lmpi
#F90=ifort
# CALMIP HYPERION !---- fin ----->

SED = 
endif

else
#________________
#  ifort Compiler
#
LIB=/home/softs/IFORT/poc-netcdf/lib/libpoc-netcdf.a /home/softs/IFORT/netcdf/lib/libnetcdf.a -lstdc++
NETINC=/home/softs/IFORT/netcdf/include/

OBJDIR=../../CDIR_IFORT/REGION
VPATH=$(VPATHTMP):$(OBJDIR):.
INC = -I$(USERDIR) -I$(NETINC)  -I$(UPDATEDIR) -I$(MYSPACEDIR) -I$(SOURCESDIR) -I$(NETINC)
#OPTIONM= $(INC) -g $(F77FLAGS)
#Option compiler avec ifort:
#OPTIONM= $(INC) $(F77FLAGS) -assume 2underscores -assume byterecl
# Grandes Grilles
OPTIONM= $(INC) $(F77FLAGS) -module $(OBJDIR) -g -assume byterecl -fPIC -shared-intel -fp-model precise 
F90=ifort
SED = 
endif

else
#__________________
#  GNU-gfortran Compiler
#
LIB=/home/softs/GFORTRAN/poc-netcdf/lib/libpoc-netcdf.a /home/softs/GFORTRAN/netcdf/lib/libnetcdf.a -lstdc++
NETINC=/home/softs/GFORTRAN/netcdf/include/
OBJDIR=../../CDIR_GFORTRAN/REGION
VPATH=$(VPATHTMP):$(OBJDIR):.
INC = -I$(USERDIR)   -I$(UPDATEDIR) -I$(MYSPACEDIR) -I$(SOURCESDIR) -I/usr/include
# Grandes Grilles
OPTIONM= $(INC) $(F77FLAGS) -M $(OBJDIR) -g -fPIC 

F90=gfortran
SED = 
endif

#
#
#

#  Rule from ".f" to ".o"
#
.F90.o:
#	$(CPP)  $(KEY1)  $< $(SED) > $(OBJDIR)/$*.f90
#	cd $(OBJDIR); $(F90) $(OPTIONM) -c   $(OBJDIR)/$*.f90
	echo $(VPATH); 
	$(CPP)  $(KEY1) $(KEY2)  $< $(SED) > $(OBJDIR)/$*.f90
	$(F90) $(OPTIONM) -c   $(OBJDIR)/$*.f90
	@mv  $*.o $(OBJDIR)/.

OBJSM =	module_parameter.o\
	module_parallele.o\
       	module_biology.o\
       	module_principal.o\
       	module_q.o\
       	module_parameter_sedim.o\
       	comsubstance.o\
       	sedim_S.o\
       	subreaddat.o\
       	module_sediment.o\
       	module_netcdf4restart.o\
       	module_netcdfrestart.o\
	module_forcages.o\
	module_global.o\
	module_s.o\
	module_ogcm.o\
	module_sedw.o\
	module_cpl_oasis.o\
	module_cpl_surfex.o\
	module_wave.o\
	module_nh.o\
	module_drifter.o\
	module_systeme.o\
	module_optics.o\
	module_modeanalysis.o\
	module_mangrove.o\
	module_subcycle.o\
	module_grid.o\
	module_external_mode.o\
	module_my_outputs.o\
	module_offline.o\
	module_biobalance.o\
	module_biobc.o\
	module_curvgrdtoolbox.o\
	module_atmboundlayer.o\
	module_airseaflux.o\
	add_bi.o\
	advection_bio.o\
	advection_scal.o\
	airseaflux_upd.o\
	adve3Dto2D.o\
        atlas.o\
        barriere.o\
	biology.o\
	bio_restart.o\
	botprescont.o\
	bulk_formulae.o\
	cellbox_thickness.o\
	check_mpi.o\
	chronos.o\
	close_bio.o\
	convect.o\
	couple_modes.o\
	cwave_int.o\
	date_output.o\
	datetokount.o\
	deep_convection.o\
	dragcoef.o\
	dyn_restart.o\
	elapsedtimetodate.o\
	equation_of_state.o\
	graph_out.o\
	graph_out_sedim.o\
	graph_out_bio.o\
	graph1D_out.o\
	halflife_radio.o\
	hz_to_hxyr.o\
	initial_main.o\
	initial_bio.o\
	initial_graph.o\
	initial_mask_and_bathy.o\
	initial_tracer.o\
	initial_sponge.o\
	initial_state_eq.o\
	initial_tide.o\
	initial_with_obc.o\
	InitPelagic.o\
	internal_mode.o\
	io_switch.o\
        kount_to_date.o\
        latlon_to_ij.o\
        latlontoij.o\
        latlonztoijk.o\
        lissebathy.o\
        leastsquaresolver.o\
	main.o\
	mixsed_bio.o\
	maskt_to_maskuvp.o\
        sigstepgrid.o\
	model_1d.o\
	model_2d.o\
	model_3d.o\
	model_offline.o\
        momentum_equations.o\
	moveforward.o\
	moyenne_temps.o\
	netcdf.o\
        obc_bio.o\
        obc_dz.o\
        obc_ext.o\
        obc_h.o\
	obc_int.o\
	obc_lonlat.o\
	obc_mixsigstep.o\
	obc_mask.o\
	obc_river.o\
	obc_scal.o\
	obc_turbulence.o\
	obc_depth.o\
	obc_ssh.o\
	obc_surfstress.o\
	omega.o\
	pressure_gradient.o\
	quick_initial.o\
	read_ogcm_fields.o\
	reset.o\
	river_bio_upd.o\
	river_upd.o\
	scalars.o\
	sediment_bio.o\
	set_parameters.o\
	set_rivers.o\
	sigma_levels.o\
	sortie_pt_fixe.o\
	source_tracer.o\
	stokesforces.o\
        strada.o\
        s_model_main.o\
	the_end.o\
	tide_analysis.o\
	tide_netcdf_create_file.o\
	tide_nodal_parameters.o\
	time_step.o\
	time_to_update_forcing_file.o\
	turbulence_adv.o\
	turbulence_k_eps.o\
	turbulence_gaspar.o\
	tridiagonalsolver.o\
        update_obcforcingterms.o\
        update_tide.o\
        usersbiobc.o\
	vertmix.o\
        wetdry_mask_airseafluxes.o\
	windstress.o\
	z_averaged.o\
	z_levels.o\
	z_thickness.o\
#__________________________________________________________
# Compilation:
#__________________________________________________________
#
# Pour Symphonie:
#
S26.exe: $(OBJSM)
	cd $(OBJDIR) ; $(F90) $(OPTIONM) $(KEY1) -o ../../RDIR/REGION/S26.exe $(OBJSM) $(LIB) $(LIB_OASIS)
	pwd >> last_version_used
	date >> last_version_used
	echo $(F90) >> last_version_used
	echo 'clef compilation: ' $(F77FLAGS) >> last_version_used
	echo 'clef modele key1: ' $(KEY1) >> last_version_used
	echo 'clef modele key2: ' $(KEY2) >> last_version_used
	echo >> last_version_used
#/usr/bin/ogg123 /home/marp/sounds/KDE_Beep_Connect.ogg


clean : 
	rm *mod ; cd $(OBJDIR) ; rm *.f90 *.o *.mod ../../RDIR/REGION/S26.exe
#
module_parameter.o: module_parameter.F90 module_principal.F90
#
module_parallele.o: module_principal.F90 module_parallele.F90
#
module_biology.o: module_biology.F90 module_parameter.F90
#
module_principal.o: module_principal.F90 module_wave.F90 module_parameter.F90 module_biology.F90
#
module_q.o: module_q.F90 module_parallele.F90 module_principal.F90
#
module_parameter_sedim.o: module_parameter.F90 module_parameter_sedim.F90 module_principal.F90
#
module_sediment.o: module_sediment.F90 module_s.F90 module_principal.F90 module_biology.F90 module_parameter.F90 module_parameter_sedim.F90
#
module_netcdf4restart.o: module_netcdf4restart.F90 module_principal.F90 module_parallele.F90
#
module_netcdfrestart.o: module_netcdfrestart.F90 module_principal.F90 module_parallele.F90 module_netcdf4restart.F90
#
module_forcages.o: module_forcages.F90 module_principal.F90 module_wave.F90
#
module_global.o: module_global.F90 module_parameter.F90
#
module_s.o: module_s.F90 module_parameter.F90 module_parallele.F90 module_principal.F90
#
module_ogcm.o: module_ogcm.F90 module_parallele.F90 module_principal.F90 module_forcages.F90 module_s.F90 module_global.F90
#
module_sedw.o: module_s.F90 module_sedw.F90 module_principal.F90
#
module_wave.o: module_wave.F90 module_principal.F90 module_parallele.F90 module_s.F90 module_sedw.F90 module_global.F90
#
module_nh.o: module_nh.F90
#
module_drifter.o: module_drifter.F90 module_principal.F90 module_parallele.F90
#
module_systeme.o: module_s.F90 module_systeme.F90 module_principal.F90
#
module_optics.o: module_optics.F90 module_parallele.F90 module_principal.F90
#
module_modeanalysis.o: module_modeanalysis.F90 module_principal.F90 module_parallele.F90 module_s.F90 module_systeme.F90
#
module_mangrove.o: module_mangrove.F90 module_principal.F90 module_parallele.F90
#
module_subcycle.o: module_s.F90 module_subcycle.F90 module_parallele.F90 module_principal.F90
#
module_grid.o: module_grid.F90 module_parallele.F90 module_principal.F90 module_global.F90
#
module_external_mode.o: module_external_mode.F90 module_parallele.F90 module_principal.F90 module_s.F90 module_mangrove.F90 module_q.F90
#
module_my_outputs.o: module_my_outputs.F90 module_principal.F90 module_parallele.F90
#
module_offline.o: module_offline.F90 module_principal.F90 module_parallele.F90 module_s.F90
#
module_biobalance.o: module_biobalance.F90 module_principal.F90 module_parallele.F90
#
module_biobc.o: module_biobc.F90 module_principal.F90 module_parallele.F90
#
module_curvgrdtoolbox.o: module_curvgrdtoolbox.F90 module_principal.F90 module_parallele.F90
#
module_atmboundlayer.o: module_atmboundlayer.F90 module_principal.F90 module_parallele.F90
#
module_airseaflux.o: module_airseaflux.F90 module_optics.F90 module_parallele.F90 module_principal.F90 module_forcages.F90 module_s.F90 module_atmboundlayer.F90
#
module_cpl_oasis.o: module_cpl_oasis.F90 module_principal.F90 module_parameter.F90 module_parallele.F90
#
module_cpl_surfex.o: module_cpl_surfex.F90 module_parameter.F90 module_cpl_oasis.F90 module_principal.F90 module_parallele.F90
#
comsubstance.o: comsubstance.F90 module_parameter.F90 module_parameter_sedim.F90
#
sedim_S.o: sedim_S.F90 module_parameter.F90 module_parameter_sedim.F90 module_principal.F90 module_parallele.F90 module_sediment.F90 module_s.F90 module_biology.F90
#
subreaddat.o: subreaddat.F90 module_parameter.F90 module_parameter_sedim.F90 module_principal.F90
#
add_bi.o: add_bi.F90 module_principal.F90
#
advection_bio.o: advection_bio.F90 module_principal.F90 module_parallele.F90 module_s.F90
#
advection_scal.o: advection_scal.F90 module_principal.F90 module_parallele.F90
#
airseaflux_upd.o: airseaflux_upd.F90 module_principal.F90
#
adve3Dto2D.o: adve3Dto2D.F90 module_principal.F90 module_parallele.F90
#
atlas.o: atlas.F90 module_principal.F90 module_s.F90 module_parallele.F90
#
barriere.o: barriere.F90 module_principal.F90 module_parallele.F90
#
biology.o: biology.F90 module_principal.F90
#
bio_restart.o: bio_restart.F90 module_principal.F90 module_parallele.F90 module_biobc.F90
#
botprescont.o: botprescont.F90 module_principal.F90 module_parallele.F90
#
bulk_formulae.o: bulk_formulae.F90 module_principal.F90 module_parallele.F90
#
cellbox_thickness.o: cellbox_thickness.F90 module_principal.F90 module_parallele.F90
#
check_mpi.o: check_mpi.F90 module_principal.F90 module_parallele.F90
#
chronos.o: chronos.F90 module_principal.F90 module_parallele.F90
#
close_bio.o: close_bio.F90 module_principal.F90
#
convect.o: convect.F90 module_principal.F90
#
couple_modes.o: couple_modes.F90 module_principal.F90 module_parallele.F90 module_s.F90
#
cwave_int.o: cwave_int.F90 module_principal.F90
#
date_output.o: date_output.F90 module_principal.F90 module_parallele.F90
#
datetokount.o: datetokount.F90 module_principal.F90 module_parallele.F90
#
deep_convection.o: deep_convection.F90
#
dragcoef.o: dragcoef.F90 module_parallele.F90 module_principal.F90 module_q.F90 module_s.F90 module_sedw.F90 module_offline.F90
#
dyn_restart.o: dyn_restart.F90 module_parallele.F90 module_principal.F90 module_s.F90 module_netcdfrestart.F90 module_offline.F90
#
elapsedtimetodate.o: elapsedtimetodate.F90 module_principal.F90
#
equation_of_state.o: equation_of_state.F90 module_principal.F90 module_parallele.F90 module_offline.F90
#
graph_out.o: graph_out.F90 module_principal.F90 module_parallele.F90 module_modeanalysis.F90 module_my_outputs.F90 module_q.F90 module_parameter.F90 module_parameter_sedim.F90
#
graph_out_sedim.o: graph_out_sedim.F90 module_principal.F90 module_parallele.F90 module_parameter.F90 module_parameter_sedim.F90 module_biology.F90
#
graph_out_bio.o: graph_out_bio.F90 module_parallele.F90 module_principal.F90 module_modeanalysis.F90 module_my_outputs.F90 module_offline.F90
#
graph1D_out.o: graph1D_out.F90 module_principal.F90
#
halflife_radio.o: halflife_radio.F90 module_principal.F90
#
hz_to_hxyr.o: hz_to_hxyr.F90 module_principal.F90 module_parallele.F90 module_ogcm.F90
#
initial_main.o: initial_main.F90 module_parallele.F90 module_principal.F90 module_wave.F90 module_drifter.F90 module_offline.F90 module_airseaflux.F90 module_modeanalysis.F90 module_grid.F90 module_my_outputs.F90 module_q.F90 module_curvgrdtoolbox.F90
#
initial_bio.o: initial_bio.F90 module_principal.F90 module_parallele.F90 module_biobc.F90
#
initial_graph.o: initial_graph.F90 module_parallele.F90 module_principal.F90
#
initial_mask_and_bathy.o: initial_mask_and_bathy.F90 module_parallele.F90 module_principal.F90 module_global.F90 module_mangrove.F90 module_ogcm.F90 module_grid.F90 module_forcages.F90
#
initial_tracer.o: initial_tracer.F90 module_principal.F90 module_parallele.F90
#
initial_sponge.o: initial_sponge.F90 module_principal.F90 module_parallele.F90 module_global.F90
#
initial_state_eq.o: initial_state_eq.F90 module_principal.F90 module_parallele.F90
#
initial_tide.o: initial_tide.F90 module_principal.F90 module_parallele.F90 module_s.F90 module_systeme.F90 module_forcages.F90
#
initial_with_obc.o: initial_with_obc.F90 module_parallele.F90 module_principal.F90
#
nitPelagic.o: nitPelagic.F90
#
internal_mode.o: internal_mode.F90 module_parallele.F90 module_principal.F90 module_q.F90 module_s.F90 module_external_mode.F90
#
io_switch.o: io_switch.F90 module_principal.F90 module_parallele.F90
#
kount_to_date.o: kount_to_date.F90 module_principal.F90
#
latlon_to_ij.o: latlon_to_ij.F90 module_principal.F90 module_parallele.F90 module_grid.F90
#
latlontoij.o: latlontoij.F90 module_principal.F90 module_parallele.F90 module_grid.F90
#
latlonztoijk.o: latlonztoijk.F90 module_principal.F90 module_parallele.F90
#
lissebathy.o: lissebathy.F90 module_principal.F90 module_parallele.F90
#
leastsquaresolver.o: leastsquaresolver.F90 module_principal.F90 module_s.F90 module_systeme.F90
#
main.o: main.F90 module_principal.F90 module_parallele.F90 module_s.F90 module_cpl_oasis.F90
#
mixsed_bio.o: mixsed_bio.F90 module_principal.F90 module_parallele.F90
#
maskt_to_maskuvp.o: maskt_to_maskuvp.F90 module_principal.F90
#
sigstepgrid.o: sigstepgrid.F90 module_parallele.F90 module_principal.F90 module_global.F90 module_offline.F90
#
model_1d.o: model_1d.F90
#
model_2d.o: model_2d.F90 module_parallele.F90 module_principal.F90 module_airseaflux.F90 module_wave.F90 module_external_mode.F90 module_my_outputs.F90 module_modeanalysis.F90 module_parameter.F90 module_parameter_sedim.F90 module_cpl_surfex.F90
#
model_3d.o: model_3d.F90 module_parallele.F90 module_principal.F90 module_wave.F90 module_drifter.F90 module_offline.F90 module_airseaflux.F90 module_s.F90 module_modeanalysis.F90 module_external_mode.F90 module_my_outputs.F90 module_parameter.F90 module_parameter_sedim.F90 module_cpl_surfex.F90
#
model_offline.o: model_offline.F90 module_parallele.F90 module_principal.F90 module_drifter.F90 module_s.F90 module_offline.F90 module_airseaflux.F90 module_wave.F90 module_parameter.F90 module_parameter_sedim.F90
#
momentum_equations.o: momentum_equations.F90 module_parallele.F90 module_principal.F90 module_mangrove.F90
#
moveforward.o: moveforward.F90 module_principal.F90
#
moyenne_temps.o: moyenne_temps.F90 module_principal.F90
#
netcdf.o: netcdf.F90 module_principal.F90 module_parallele.F90
#
obc_bio.o: obc_bio.F90 module_principal.F90 module_parallele.F90 module_biology.F90
#
obc_dz.o: obc_dz.F90 module_principal.F90 module_parallele.F90
#
obc_ext.o: obc_ext.F90 module_principal.F90 module_parallele.F90 module_q.F90
#
obc_h.o: obc_h.F90 module_principal.F90 module_parallele.F90
#
obc_int.o: obc_int.F90 module_principal.F90 module_parallele.F90
#
obc_lonlat.o: obc_lonlat.F90 module_principal.F90 module_parallele.F90
#
obc_mixsigstep.o: obc_mixsigstep.F90 module_principal.F90 module_parallele.F90
#
obc_mask.o: obc_mask.F90 module_principal.F90 module_parallele.F90
#
obc_river.o: obc_river.F90 module_principal.F90 module_parallele.F90
#
obc_scal.o: obc_scal.F90 module_principal.F90 module_parallele.F90 module_ogcm.F90
#
obc_turbulence.o: obc_turbulence.F90 module_principal.F90 module_parallele.F90
#
obc_depth.o: obc_depth.F90 module_principal.F90 module_parallele.F90
#
obc_ssh.o: obc_ssh.F90 module_principal.F90 module_parallele.F90
#
obc_surfstress.o: obc_surfstress.F90 module_principal.F90 module_parallele.F90
#
omega.o: omega.F90 module_parallele.F90 module_principal.F90 module_airseaflux.F90
#
pressure_gradient.o: pressure_gradient.F90 module_principal.F90 module_parallele.F90 module_modeanalysis.F90 module_ogcm.F90 module_s.F90 module_q.F90
#
quick_initial.o: quick_initial.F90 module_principal.F90 module_parallele.F90
#
read_ogcm_fields.o: read_ogcm_fields.F90 module_principal.F90 module_parallele.F90 module_ogcm.F90 module_s.F90 module_systeme.F90
#
reset.o: reset.F90 module_principal.F90 module_parallele.F90
#
river_bio_upd.o: river_bio_upd.F90 module_principal.F90
#
river_upd.o: river_upd.F90 module_principal.F90 module_parallele.F90
#
scalars.o: scalars.F90 module_principal.F90 module_parallele.F90 module_my_outputs.F90
#
sediment_bio.o: sediment_bio.F90 module_principal.F90
#
set_parameters.o: set_parameters.F90 module_parallele.F90 module_principal.F90 module_wave.F90 module_s.F90 module_optics.F90 module_airseaflux.F90
#
set_rivers.o: set_rivers.F90 module_parallele.F90 module_principal.F90 module_global.F90
#
sigma_levels.o: sigma_levels.F90 module_parallele.F90 module_principal.F90 module_grid.F90
#
sortie_pt_fixe.o: sortie_pt_fixe.F90 module_principal.F90
#
source_tracer.o: source_tracer.F90 module_principal.F90 module_parallele.F90
#
stokesforces.o: stokesforces.F90 module_principal.F90 module_parallele.F90
#
strada.o: strada.F90 module_principal.F90 module_biobalance.F90 module_biobc.F90 module_biology.F90 module_s.F90 module_parameter.F90 module_parameter_sedim.F90 module_sediment.F90 module_parallele.F90
#
s_model_main.o: s_model_main.F90
#
the_end.o: the_end.F90 module_principal.F90 module_parallele.F90 module_modeanalysis.F90
#
tide_analysis.o: tide_analysis.F90 module_principal.F90 module_parallele.F90 module_s.F90 module_systeme.F90
#
tide_netcdf_create_file.o: tide_netcdf_create_file.F90 module_principal.F90 module_parallele.F90
#
tide_nodal_parameters.o: tide_nodal_parameters.F90 module_principal.F90 module_parallele.F90 module_s.F90 module_systeme.F90
#
time_step.o: time_step.F90 module_principal.F90 module_parallele.F90 module_s.F90 module_subcycle.F90 module_q.F90
#
time_to_update_forcing_file.o: time_to_update_forcing_file.F90 module_principal.F90 module_parallele.F90
#
turbulence_adv.o: turbulence_adv.F90 module_principal.F90 module_parallele.F90
#
turbulence_k_eps.o: turbulence_k_eps.F90 module_principal.F90 module_parallele.F90
#
turbulence_gaspar.o: turbulence_gaspar.F90 module_principal.F90 module_parallele.F90 module_q.F90
#
tridiagonalsolver.o: tridiagonalsolver.F90 module_principal.F90
#
update_obcforcingterms.o: update_obcforcingterms.F90 module_principal.F90 module_parallele.F90
#
update_tide.o: update_tide.F90 module_principal.F90 module_s.F90 module_subcycle.F90
#
usersbiobc.o: usersbiobc.F90
#
vertmix.o: vertmix.F90 module_principal.F90 module_parallele.F90 module_external_mode.F90 module_airseaflux.F90
#
wetdry_mask_airseafluxes.o: wetdry_mask_airseafluxes.F90 module_principal.F90
#
windstress.o: windstress.F90 module_principal.F90 module_wave.F90
#
z_averaged.o: z_averaged.F90 module_principal.F90 module_wave.F90
#
z_levels.o: z_levels.F90 module_principal.F90 module_parallele.F90
#
z_thickness.o: z_thickness.F90 module_principal.F90 module_parallele.F90
